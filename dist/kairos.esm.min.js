/*!
 * Kairos v1.1.0
 * (c) 2025 Ersin Koc
 * Released under the MIT License
 * https://github.com/ersinkoc/kairos
 */
import{EventEmitter as e}from"events";class t{constructor(e=1e3){this.cache=new Map,this.hits=0,this.misses=0,this.maxSize=e}get(e){const t=this.cache.get(e);if(void 0!==t)return this.cache.delete(e),this.cache.set(e,t),this.hits++,t;this.misses++}set(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxSize){const e=this.cache.keys().next().value;void 0!==e&&this.cache.delete(e)}this.cache.set(e,t)}has(e){return this.cache.has(e)}clear(){this.cache.clear(),this.hits=0,this.misses=0}size(){return this.cache.size}getHitRate(){const e=this.hits+this.misses;return 0===e?0:this.hits/e}getStats(){return{size:this.cache.size,maxSize:this.maxSize,hits:this.hits,misses:this.misses,hitRate:this.getHitRate()}}getMultiple(e){const t=new Map;for(const a of e){const e=this.get(a);void 0!==e&&t.set(a,e)}return t}setMultiple(e){for(const[t,a]of e)this.set(t,a)}cleanup(e){for(const[t,a]of this.cache)e(t,a)&&this.cache.delete(t)}delete(e){return this.cache.delete(e)}}function a(e,a,n){const r=new t(n?.maxSize||1e3),i=n?.ttl;return(...t)=>{const n=a?a(...t):JSON.stringify(t),s=r.get(n);if(s){if(!i||Date.now()-s.timestamp<i)return s.value;r.delete(n)}const o=e(...t);return r.set(n,{value:o,timestamp:Date.now()}),o}}function n(e,t){return a(e,t,{maxSize:1e4,ttl:6e4})}function r(){return new t(1e4)}function i(){return new t(5e3)}class s{constructor(e,t){this.pool=[],this.created=0,this.reused=0,this.createFn=e,this.resetFn=t?.resetFn||(e=>{e&&"object"==typeof e&&"reset"in e&&"function"==typeof e.reset&&e.reset()}),this.maxSize=t?.maxSize||100}acquire(){if(this.pool.length>0){const e=this.pool.pop();return this.reused++,e}return this.created++,this.createFn()}release(e){this.pool.length<this.maxSize&&(this.resetFn&&this.resetFn(e),this.pool.push(e))}preWarm(e){for(let t=0;e>t;t++){const e=this.createFn();this.pool.push(e)}}clear(){this.pool=[]}getStats(){return{poolSize:this.pool.length,maxSize:this.maxSize,created:this.created,reused:this.reused,reuseRate:this.reused/(this.created+this.reused)||0,efficiency:this.reused/this.created||0}}}const o=new s(()=>new Date,{maxSize:50,resetFn:e=>e.setTime(0)});function d(e,t){return new s(e,t)}new s(()=>[],{maxSize:20,resetFn:e=>e.length=0}),new s(()=>new Map,{maxSize:20,resetFn:e=>e.clear()}),new s(()=>new Set,{maxSize:20,resetFn:e=>e.clear()});const l=new class{constructor(){this.pools=new Map}register(e,t,a){const n=new s(t,a);return this.pools.set(e,n),n}getPool(e){return this.pools.get(e)}preWarmAll(e){for(const[t,a]of Object.entries(e)){const e=this.pools.get(t);e&&e.preWarm(a)}}clearAll(){for(const e of this.pools.values())e.clear()}getAllStats(){const e={};for(const[t,a]of this.pools)e[t]=a.getStats();return e}};l.register("date",()=>new Date,{maxSize:50,resetFn:e=>e.setTime(0)}),l.register("array",()=>[],{maxSize:20,resetFn:e=>e.length=0}),l.register("map",()=>new Map,{maxSize:20,resetFn:e=>e.clear()}),l.register("set",()=>new Set,{maxSize:20,resetFn:e=>e.clear()});class u extends e{constructor(e){super(),this.snapshots=[],this.monitoring=!1,this.interval=null,this.lastHeapUsed=0,this.maxSnapshots=e?.maxSnapshots||100,this.checkInterval=e?.checkInterval||1e3,this.thresholds={heapUsed:{warning:200,critical:400,emergency:600},rss:{warning:300,critical:500,emergency:800},heapGrowthRate:{warning:10,critical:20,emergency:50},...e?.thresholds}}takeSnapshot(){const e=process.memoryUsage(),t={timestamp:Date.now(),rss:e.rss/1024/1024,heapTotal:e.heapTotal/1024/1024,heapUsed:e.heapUsed/1024/1024,external:e.external/1024/1024,arrayBuffers:e.arrayBuffers/1024/1024};return this.snapshots.push(t),this.snapshots.length>this.maxSnapshots&&this.snapshots.shift(),t}checkThresholds(e){const t=[];if(this.thresholds.heapUsed){const{warning:a,critical:n,emergency:r}=this.thresholds.heapUsed;e.heapUsed<r?e.heapUsed<n?e.heapUsed<a||t.push({type:"warning",message:`Heap usage elevated: ${e.heapUsed.toFixed(2)}MB`,threshold:a,current:e.heapUsed,timestamp:e.timestamp}):t.push({type:"critical",message:`Heap usage very high: ${e.heapUsed.toFixed(2)}MB`,threshold:n,current:e.heapUsed,timestamp:e.timestamp}):t.push({type:"emergency",message:`Heap usage critically high: ${e.heapUsed.toFixed(2)}MB`,threshold:r,current:e.heapUsed,timestamp:e.timestamp})}if(this.thresholds.rss){const{warning:a,critical:n,emergency:r}=this.thresholds.rss;e.rss<r?e.rss<n?e.rss<a||t.push({type:"warning",message:`RSS elevated: ${e.rss.toFixed(2)}MB`,threshold:a,current:e.rss,timestamp:e.timestamp}):t.push({type:"critical",message:`RSS very high: ${e.rss.toFixed(2)}MB`,threshold:n,current:e.rss,timestamp:e.timestamp}):t.push({type:"emergency",message:`RSS critically high: ${e.rss.toFixed(2)}MB`,threshold:r,current:e.rss,timestamp:e.timestamp})}if(this.thresholds.heapGrowthRate&&this.lastHeapUsed>0){const a=e.heapUsed-this.lastHeapUsed,{warning:n,critical:r,emergency:i}=this.thresholds.heapGrowthRate;i>a?r>a?n>a||t.push({type:"warning",message:`Heap growth detected: ${a.toFixed(2)}MB in ${this.checkInterval}ms`,threshold:n,current:a,timestamp:e.timestamp}):t.push({type:"critical",message:`High heap growth: ${a.toFixed(2)}MB in ${this.checkInterval}ms`,threshold:r,current:a,timestamp:e.timestamp}):t.push({type:"emergency",message:`Rapid heap growth: ${a.toFixed(2)}MB in ${this.checkInterval}ms`,threshold:i,current:a,timestamp:e.timestamp})}return this.lastHeapUsed=e.heapUsed,t}monitor(){const e=this.takeSnapshot(),t=this.checkThresholds(e);for(const e of t)this.emit("alert",e),"emergency"===e.type?this.emit("emergency",e):"critical"===e.type&&this.emit("critical",e);this.emit("snapshot",e)}start(){this.monitoring||(this.monitoring=!0,this.interval=setInterval(()=>{this.monitor()},this.checkInterval),this.emit("started"))}stop(){this.monitoring&&(this.interval&&(clearInterval(this.interval),this.interval=null),this.monitoring=!1,this.emit("stopped"))}isMonitoring(){return this.monitoring}getSnapshots(e){return e?this.snapshots.slice(-e):[...this.snapshots]}getLatestSnapshot(){return this.snapshots.length>0?this.snapshots[this.snapshots.length-1]:null}getStats(){if(0===this.snapshots.length)return null;const e=this.snapshots.map(e=>e.heapUsed),t=this.snapshots.map(e=>e.rss);return{snapshotCount:this.snapshots.length,monitoring:this.monitoring,checkInterval:this.checkInterval,timeRange:{start:this.snapshots[0].timestamp,end:this.snapshots[this.snapshots.length-1].timestamp,duration:this.snapshots[this.snapshots.length-1].timestamp-this.snapshots[0].timestamp},heap:{current:this.snapshots[this.snapshots.length-1].heapUsed,min:Math.min(...e),max:Math.max(...e),avg:e.reduce((e,t)=>e+t,0)/e.length,growth:this.snapshots[this.snapshots.length-1].heapUsed-this.snapshots[0].heapUsed},rss:{current:this.snapshots[this.snapshots.length-1].rss,min:Math.min(...t),max:Math.max(...t),avg:t.reduce((e,t)=>e+t,0)/t.length,growth:this.snapshots[this.snapshots.length-1].rss-this.snapshots[0].rss}}}clearSnapshots(){this.snapshots=[],this.lastHeapUsed=0,this.emit("cleared")}updateThresholds(e){this.thresholds={...this.thresholds,...e},this.emit("thresholds-updated",this.thresholds)}getThresholds(){return{...this.thresholds}}forceGC(){return!!global.gc&&(global.gc(),this.emit("gc-forced"),!0)}detectMemoryLeaks(e=10,t=5){if(this.snapshots.length<e)return!1;const a=this.snapshots.slice(-e),n=a.map(e=>e.heapUsed);let r=0;for(let e=1;e<n.length;e++)n[e]>n[e-1]&&r++;const i=r/(n.length-1),s=n[n.length-1]-n[0],o=i>.7&&s>t;return o&&this.emit("memory-leak-detected",{windowSize:e,growthRatio:i,totalGrowth:s,duration:a[a.length-1].timestamp-a[0].timestamp}),o}}const c=new u;function h(e){return e instanceof Date&&!isNaN(e.getTime())}function m(e){return"number"==typeof e&&!isNaN(e)&&isFinite(e)}function y(e){return"string"==typeof e&&e.length>0}function f(e){return m(e)&&e>=1e3&&9999>=e}function p(e){return m(e)&&e>=1&&12>=e}function g(e){return m(e)&&e>=1&&31>=e}function w(e){return m(e)&&e>=0&&6>=e}function b(e){return m(e)&&(e>=1&&5>=e||-1===e)}function M(e){const t=[];if(!e||"object"!=typeof e)return t.push("Rule must be an object"),t;y(e.name)||t.push("Rule name must be a non-empty string");const a=["fixed","nth-weekday","relative","lunar","easter-based","custom"];if(a.includes(e.type)||t.push("Rule type must be one of: "+a.join(", ")),!e.rule||"object"!=typeof e.rule)return t.push("Rule must have a rule property"),t;switch(e.type){case"fixed":p(e.rule.month)||t.push("Fixed rule month must be 1-12"),g(e.rule.day)||t.push("Fixed rule day must be 1-31");break;case"nth-weekday":p(e.rule.month)||t.push("Nth-weekday rule month must be 1-12"),w(e.rule.weekday)||t.push("Nth-weekday rule weekday must be 0-6"),b(e.rule.nth)||t.push("Nth-weekday rule nth must be 1-5 or -1");break;case"relative":y(e.rule.relativeTo)||t.push("Relative rule relativeTo must be a non-empty string"),m(e.rule.offset)||t.push("Relative rule offset must be a number");break;case"lunar":{const a=["islamic","chinese","hebrew","persian"];a.includes(e.rule.calendar)||t.push("Lunar rule calendar must be one of: "+a.join(", ")),p(e.rule.month)||t.push("Lunar rule month must be 1-12"),g(e.rule.day)||t.push("Lunar rule day must be 1-31");break}case"easter-based":m(e.rule.offset)||t.push("Easter-based rule offset must be a number");break;case"custom":"function"!=typeof e.rule.calculate&&t.push("Custom rule must have a calculate function")}return t}function D(e,t){const a=Error(e);throw t&&(a.code=t),a}const x=e=>null!==e&&"object"==typeof e&&("year"in e&&"month"in e&&"day"in e||"date"in e),v=new t(1e3),k={dateOnly:/^\d{4}-\d{2}-\d{2}$/,european:/^(\d{1,2})\.(\d{1,2})\.(\d{4})$/,iso8601:/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}/,usFormat:/^(\d{1,2})\/(\d{1,2})\/(\d{4})$/},S=new t(5e3),Y=(e,t,a)=>{if(1>e||e>9999||1>t||t>12||1>a||a>31)return!1;const n=new Date(e,t-1,a,0,0,0,0);return n.getFullYear()===e&&n.getMonth()===t-1&&n.getDate()===a},E=n(e=>{if(k.dateOnly.test(e)){const[t,a,n]=e.split("-").map(Number);return Y(t,a,n)?new Date(t,a-1,n,0,0,0,0):null}return null},e=>e),L=n(e=>{const t=e.match(k.european);if(t){const e=parseInt(t[1],10),a=parseInt(t[2],10),n=parseInt(t[3],10);return Y(n,a,e)?new Date(n,a-1,e,0,0,0,0):null}return null},e=>e),R=n(e=>{const t=e.match(k.usFormat);if(t){const e=parseInt(t[1],10),a=parseInt(t[2],10),n=parseInt(t[3],10);return Y(n,e,a)?new Date(n,e-1,a,0,0,0,0):null}return null},e=>e);class H{static enableMemoryMonitoring(e){this.t||(e&&c.updateThresholds(e),c.start(),this.t=!0,c.on("emergency",e=>{c.forceGC()}),c.on("critical",e=>{}),c.on("memory-leak-detected",e=>{}))}static disableMemoryMonitoring(){this.t&&(c.stop(),this.t=!1)}static isMemoryMonitoringEnabled(){return this.t}static enableObjectPooling(){this.i=!0,l.preWarmAll({date:20,array:10,map:5,set:5})}static disableObjectPooling(){this.i=!1,l.clearAll()}static isObjectPoolingEnabled(){return this.i}static getMemoryStats(){return c.getStats()}static getObjectPoolStats(){return l.getAllStats()}constructor(e){this.o=this.parseInput(e)}parseInput(e){if(void 0===e)return new Date;if(e instanceof Date)return new Date(e.getTime());if("number"==typeof e)return new Date(isNaN(e)?NaN:e);if("string"==typeof e){if(S.has(e)){const t=S.get(e);return new Date(t.getTime())}if(0===e.length||"invalid"===e.toLowerCase()){const t=new Date(NaN);return S.set(e,t),t}let t=null;if(t=E(e),t)return S.set(e,t),t;if(t=L(e),t)return S.set(e,t),t;if(t=R(e),t)return S.set(e,t),t;const a=new Date(e);return isNaN(a.getTime())?(H.config.strict&&D("Invalid date string: "+e,"INVALID_DATE"),S.set(e,new Date(NaN)),new Date(NaN)):(S.set(e,a),a)}if(e&&"object"==typeof e){if(null!==(t=e)&&"object"==typeof t&&"o"in t&&t.o instanceof Date)return new Date(e.o.getTime());if((e=>null!==e&&"object"==typeof e&&"toDate"in e&&"function"==typeof e.toDate)(e))return e.toDate();if(x(e)&&void 0!==e.year&&void 0!==e.month&&void 0!==e.day){const t=e.year,a=e.month-1,n=e.day,r=e.hour||0,i=e.minute||0,s=e.second||0,o=e.millisecond||0,d=new Date(t,a,n,r,i,s,o);return d.getFullYear()!==t||d.getMonth()!==a||d.getDate()!==n?new Date(NaN):d}if(x(e)&&e.date instanceof Date)return new Date(e.date.getTime())}var t;return new Date(NaN)}valueOf(){return this.o.getTime()}toString(){return this.o.toString()}toISOString(){return this.o.toISOString()}offset(){return this.l?0:-this.o.getTimezoneOffset()}toDate(){return new Date(this.o.getTime())}clone(){if(H.i){const e=o.acquire();e.setTime(this.o.getTime());const t=new H(e);return"undefined"!=typeof globalThis&&"FinalizationRegistry"in globalThis&&new(0,globalThis.FinalizationRegistry)(e=>{o.release(e)}).register(t,e),t}return new H(this.o)}year(e){if(void 0===e)return this.o.getFullYear();const t=this.clone();return t.o.setFullYear(e),t}month(e){if(void 0===e)return this.o.getMonth()+1;const t=this.clone();return t.o.setMonth(e-1),t}date(e){if(void 0===e)return this.o.getDate();const t=this.clone();return t.o.setDate(e),t}day(){return this.o.getDay()}hour(e){if(void 0===e)return this.o.getHours();const t=this.clone();return t.o.setHours(e),t}minute(e){if(void 0===e)return this.o.getMinutes();const t=this.clone();return t.o.setMinutes(e),t}second(e){if(void 0===e)return this.o.getSeconds();const t=this.clone();return t.o.setSeconds(e),t}millisecond(e){if(void 0===e)return this.o.getMilliseconds();const t=this.clone();return t.o.setMilliseconds(e),t}add(e,t){if(!this.isValid())return this.clone();const a=this.clone();switch(this.normalizeUnit(t)){case"year":a.o.setFullYear(a.o.getFullYear()+e);break;case"month":{const t=a.o.getDate();let n=a.o.getMonth()+e,r=a.o.getFullYear();for(;0>n;)n+=12,r--;for(;n>=12;)n-=12,r++;const i=new Date(r,n+1,0).getDate();a.o.setDate(1),a.o.setFullYear(r),a.o.setMonth(n),a.o.setDate(Math.min(t,i));break}case"week":a.o.setDate(a.o.getDate()+7*e);break;case"day":if(e%1!=0){const t=Math.floor(e),n=24*(e-t);a.o.setDate(a.o.getDate()+t),a.o.setHours(a.o.getHours()+n)}else a.o.setDate(a.o.getDate()+e);break;case"hour":a.o.setHours(a.o.getHours()+e);break;case"minute":a.o.setMinutes(a.o.getMinutes()+e);break;case"second":a.o.setSeconds(a.o.getSeconds()+e);break;case"millisecond":a.o.setMilliseconds(a.o.getMilliseconds()+e);break;default:D("Unknown unit: "+t,"INVALID_UNIT")}return a}subtract(e,t){return this.add(-e,t)}startOf(e){const t=this.clone();switch(this.normalizeUnit(e)){case"year":t.o.setMonth(0,1),t.o.setHours(0,0,0,0);break;case"month":t.o.setDate(1),t.o.setHours(0,0,0,0);break;case"week":{const e=t.o.getDay();t.o.setDate(t.o.getDate()-e),t.o.setHours(0,0,0,0);break}case"day":t.o.setHours(0,0,0,0);break;case"hour":t.o.setMinutes(0,0,0);break;case"minute":t.o.setSeconds(0,0);break;case"second":t.o.setMilliseconds(0)}return t}endOf(e){const t=this.clone();switch(this.normalizeUnit(e)){case"year":t.o.setMonth(11,31),t.o.setHours(23,59,59,999);break;case"month":t.o.setMonth(t.o.getMonth()+1,0),t.o.setHours(23,59,59,999);break;case"week":{const e=t.o.getDay();t.o.setDate(t.o.getDate()+(6-e)),t.o.setHours(23,59,59,999);break}case"day":t.o.setHours(23,59,59,999);break;case"hour":t.o.setMinutes(59,59,999);break;case"minute":t.o.setSeconds(59,999);break;case"second":t.o.setMilliseconds(999)}return t}isValid(){return!isNaN(this.o.getTime())}isBefore(e){return this.valueOf()<e.valueOf()}isAfter(e){return this.valueOf()>e.valueOf()}isSame(e){return this.valueOf()===e.valueOf()}format(e="YYYY-MM-DD"){if(!this.isValid())return"Invalid Date";const t=this.l,a=t?this.o.getUTCFullYear():this.o.getFullYear(),n=t?this.o.getUTCMonth()+1:this.o.getMonth()+1,r=t?this.o.getUTCDate():this.o.getDate(),i=t?this.o.getUTCHours():this.o.getHours(),s=t?this.o.getUTCMinutes():this.o.getMinutes(),o=t?this.o.getUTCSeconds():this.o.getSeconds();return isNaN(a)||isNaN(n)||isNaN(r)?"Invalid Date":e.replace(/YYYY/g,a.toString()).replace(/MM/g,n.toString().padStart(2,"0")).replace(/DD/g,r.toString().padStart(2,"0")).replace(/HH/g,i.toString().padStart(2,"0")).replace(/mm/g,s.toString().padStart(2,"0")).replace(/ss/g,o.toString().padStart(2,"0"))}normalizeUnit(e){return{y:"year",year:"year",years:"year",M:"month",month:"month",months:"month",w:"week",week:"week",weeks:"week",d:"day",day:"day",days:"day",h:"hour",hour:"hour",hours:"hour",m:"minute",minute:"minute",minutes:"minute",s:"second",second:"second",seconds:"second",ms:"millisecond",millisecond:"millisecond",milliseconds:"millisecond"}[e]||e}}H.config={locale:"en",strict:!1,suppressDeprecationWarnings:!1},H.t=!1,H.i=!0;class I{static use(e){const t=Array.isArray(e)?e:[e];for(const e of t)this.installPlugin(e);return N}static installPlugin(e){if(this.installedPlugins.has(e.name))return;if(e.dependencies)for(const t of e.dependencies)this.installedPlugins.has(t)||D(`Plugin ${e.name} depends on ${t} which is not installed`,"MISSING_DEPENDENCY");this.plugins.set(e.name,e),this.installedPlugins.add(e.name);const t={cache:v,memoize:a,validateInput:(e,t)=>{switch(t){case"date":return e instanceof Date&&!isNaN(e.getTime());case"number":return"number"==typeof e&&!isNaN(e);case"string":return"string"==typeof e;default:return!1}},throwError:D};e.install(N,t)}static extend(e){Object.assign(this.extensionMethods,e);for(const[t,a]of Object.entries(e))H.prototype[t]=a}static addStatic(e){Object.assign(this.staticMethods,e);for(const[t,a]of Object.entries(e))N[t]=a}static getPlugin(e){return this.plugins.get(e)}static isInstalled(e){return this.installedPlugins.has(e)}static getInstalledPlugins(){return Array.from(this.installedPlugins)}}I.plugins=new Map,I.installedPlugins=new Set,I.extensionMethods={},I.staticMethods={};const N=e=>new H(e);N.use=I.use.bind(I),N.extend=I.extend.bind(I),N.addStatic=I.addStatic.bind(I),N.plugins=I.plugins,N.utc=e=>{let t;if("string"!=typeof e||e.endsWith("Z")||e.includes("+")||/[+-]\d{2}:?\d{2}$/.test(e))t=new Date(e);else{const a=/^(\d{4})-(\d{2})-(\d{2})(?:\s+|T)(\d{2}):(\d{2})(?::(\d{2}))?$/,n=/^(\d{4})-(\d{2})-(\d{2})$/,r=e.match(a)||e.match(n);if(r){const e=parseInt(r[1],10),a=parseInt(r[2],10)-1,n=parseInt(r[3],10),i=r[4]?parseInt(r[4],10):0,s=r[5]?parseInt(r[5],10):0,o=r[6]?parseInt(r[6],10):0;t=new Date(Date.UTC(e,a,n,i,s,o))}else e=e.replace(" ","T")+"Z",t=new Date(e)}const a=new H(t);return a.l=!0,a},N.unix=e=>new H(new Date(1e3*e));const T=e=>e,A=e=>e,j=e=>e,O=e=>e,C=e=>e,F=e=>e,z=e=>e,$=e=>e,U=e=>e,B=e=>e,P=e=>e,q=e=>e,_=e=>e,V=e=>e,J=e=>e,W=e=>e,G=e=>e,Z=e=>Number.isInteger(e)&&e>=-864e13&&864e13>=e,K=e=>Number.isInteger(e)&&e>=1&&9999>=e,Q=e=>Number.isInteger(e)&&e>=1&&12>=e,X=e=>Number.isInteger(e)&&e>=1&&31>=e,ee=e=>Number.isInteger(e)&&e>=0&&23>=e,te=e=>Number.isInteger(e)&&e>=0&&59>=e,ae=e=>Number.isInteger(e)&&e>=0&&59>=e,ne=e=>Number.isInteger(e)&&e>=0&&999>=e,re=e=>Number.isInteger(e)&&e>=0&&6>=e,ie=e=>Number.isInteger(e)&&e>=1&&366>=e,se=e=>Number.isInteger(e)&&e>=1&&53>=e,oe=e=>/^[a-z]{2}-[A-Z]{2}$/.test(e),de=e=>e.length>0&&/^[A-Za-z0-9\-\s]+$/.test(e),le=e=>Z(e)?e:null,ue=e=>K(e)?e:null,ce=e=>Q(e)?e:null,he=e=>X(e)?e:null,me=e=>ee(e)?e:null,ye=e=>te(e)?e:null,fe=e=>ae(e)?e:null,pe=e=>ne(e)?e:null,ge=e=>re(e)?e:null,we=e=>ie(e)?e:null,be=e=>se(e)?e:null,Me=e=>oe(e)?e:null,De=e=>de(e)?e:null,xe=e=>"number"==typeof e&&Z(e),ve=e=>"number"==typeof e&&K(e),ke=e=>"number"==typeof e&&Q(e),Se=e=>"number"==typeof e&&X(e),Ye=e=>"number"==typeof e&&ee(e),Ee=e=>"number"==typeof e&&te(e),Le=e=>"number"==typeof e&&ae(e),Re=e=>"number"==typeof e&&ne(e),He=e=>"number"==typeof e&&re(e),Ie=e=>"number"==typeof e&&ie(e),Ne=e=>"number"==typeof e&&se(e),Te=e=>"string"==typeof e&&oe(e),Ae=e=>"string"==typeof e&&de(e),je={YYYY:{token:"YYYY",category:"year",length:4,description:"4-digit year",example:"2024"},YY:{token:"YY",category:"year",length:2,description:"2-digit year",example:"24"},Y:{token:"Y",category:"year",length:1,description:"Year (flexible)",example:"2024"},MMMM:{token:"MMMM",category:"month",length:4,description:"Full month name",example:"January"},MMM:{token:"MMM",category:"month",length:3,description:"Short month name",example:"Jan"},MM:{token:"MM",category:"month",length:2,description:"Zero-padded month",example:"01"},M:{token:"M",category:"month",length:1,description:"Month",example:"1"},DDDD:{token:"DDDD",category:"day",length:4,description:"Day of year",example:"001"},DD:{token:"DD",category:"day",length:2,description:"Zero-padded day",example:"01"},D:{token:"D",category:"day",length:1,description:"Day",example:"1"},dddd:{token:"dddd",category:"weekday",length:4,description:"Full weekday name",example:"Monday"},ddd:{token:"ddd",category:"weekday",length:3,description:"Short weekday name",example:"Mon"},dd:{token:"dd",category:"weekday",length:2,description:"Min weekday name",example:"Mo"},d:{token:"d",category:"weekday",length:1,description:"Weekday",example:"1"},HH:{token:"HH",category:"hour",length:2,description:"24-hour, zero-padded",example:"14"},H:{token:"H",category:"hour",length:1,description:"24-hour",example:"14"},hh:{token:"hh",category:"hour",length:2,description:"12-hour, zero-padded",example:"02"},h:{token:"h",category:"hour",length:1,description:"12-hour",example:"2"},mm:{token:"mm",category:"minute",length:2,description:"Zero-padded minutes",example:"05"},m:{token:"m",category:"minute",length:1,description:"Minutes",example:"5"},ss:{token:"ss",category:"second",length:2,description:"Zero-padded seconds",example:"09"},s:{token:"s",category:"second",length:1,description:"Seconds",example:"9"},SSS:{token:"SSS",category:"millisecond",length:3,description:"Zero-padded milliseconds",example:"123"},SS:{token:"SS",category:"millisecond",length:2,description:"2-digit milliseconds",example:"12"},S:{token:"S",category:"millisecond",length:1,description:"Milliseconds",example:"1"},A:{token:"A",category:"meridiem",length:1,description:"AM/PM uppercase",example:"PM"},a:{token:"a",category:"meridiem",length:1,description:"am/pm lowercase",example:"pm"},Z:{token:"Z",category:"timezone",length:1,description:"Timezone offset",example:"+00:00"},ZZ:{token:"ZZ",category:"timezone",length:2,description:"Timezone offset",example:"+0000"},ZZZ:{token:"ZZZ",category:"timezone",length:3,description:"Timezone name",example:"UTC"},X:{token:"X",category:"timestamp",length:1,description:"Unix timestamp (seconds)",example:"1640995200"},x:{token:"x",category:"timestamp",length:1,description:"Unix timestamp (milliseconds)",example:"1640995200000"},Q:{token:"Q",category:"quarter",length:1,description:"Quarter",example:"1"},QQ:{token:"QQ",category:"quarter",length:2,description:"Zero-padded quarter",example:"01"},wo:{token:"wo",category:"week",length:2,description:"Week of year ordinal",example:"1st"},ww:{token:"ww",category:"week",length:2,description:"Week of year",example:"01"},w:{token:"w",category:"week",length:1,description:"Week of year",example:"1"},gg:{token:"gg",category:"weekYear",length:2,description:"2-digit week year",example:"24"},gggg:{token:"gggg",category:"weekYear",length:4,description:"4-digit week year",example:"2024"},k:{token:"k",category:"weekYear",length:1,description:"ISO week year",example:"2024"},kk:{token:"kk",category:"weekYear",length:2,description:"2-digit ISO week year",example:"24"},E:{token:"E",category:"isoDay",length:1,description:"ISO day of week",example:"1"},EE:{token:"EE",category:"isoDay",length:2,description:"2-digit ISO day",example:"01"},EEE:{token:"EEE",category:"isoDay",length:3,description:"ISO day name",example:"Mon"},L:{token:"L",category:"isoWeek",length:1,description:"ISO week of year",example:"1"},LL:{token:"LL",category:"isoWeek",length:2,description:"2-digit ISO week",example:"01"},LLL:{token:"LLL",category:"isoWeek",length:3,description:"3-digit ISO week",example:"001"}};class Oe extends Error{constructor(e,t,a,n,r,i="en-US"){super(t),this.name=this.constructor.name,this.type=e,this.code=a||e,this.input=n,this.timestamp=new Date,void 0!==r&&(this.context=r),this.locale=i,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}getLocalizedMessage(e){const t=e||this.locale;return this.translateMessage(t)}toJSON(){return{name:this.name,type:this.type,code:this.code,message:this.message,localizedMessage:this.getLocalizedMessage(),input:this.input,context:this.context,timestamp:this.timestamp.toISOString(),locale:this.locale,stack:this.stack}}isType(e){return this.type===e}hasCode(e){return this.code===e}getDescription(){return`${this.code}: ${this.getLocalizedMessage()}`}}class Ce extends Oe{constructor(e,t,a,n="en-US"){super("INVALID_DATE",e,"INVALID_DATE",t,a,n)}translateMessage(e){const t={"en-US":"Invalid date provided","es-ES":"Fecha inválida proporcionada","fr-FR":"Date invalide fournie","de-DE":"Ungültiges Datum angegeben","it-IT":"Data non valida fornita","pt-BR":"Data inválida fornecida","ru-RU":"Предоставлена недействительная дата","zh-CN":"提供的日期无效","ja-JP":"無効な日付が提供されました","tr-TR":"Geçersiz tarih sağlandı"};return t[e]||t["en-US"]}}class Fe extends Oe{constructor(e,t,a,n="en-US"){super("INVALID_FORMAT",e,"INVALID_FORMAT",t,a,n)}translateMessage(e){const t={"en-US":"Invalid format string","es-ES":"Cadena de formato inválida","fr-FR":"Chaîne de format invalide","de-DE":"Ungültige Formatzeichenfolge","it-IT":"Stringa di formato non valida","pt-BR":"String de formato inválido","ru-RU":"Недопустимая строка формата","zh-CN":"无效的格式字符串","ja-JP":"無効なフォーマット文字列","tr-TR":"Geçersiz format dizesi"};return t[e]||t["en-US"]}}class ze extends Oe{constructor(e,t,a,n="en-US"){super("INVALID_LOCALE",e,"INVALID_LOCALE",t,a,n)}translateMessage(e){const t={"en-US":"Invalid locale specified","es-ES":"Configuración regional inválida especificada","fr-FR":"Locale invalide spécifiée","de-DE":"Ungültiges Gebietsschema angegeben","it-IT":"Locale non valido specificato","pt-BR":"Localidade inválida especificada","ru-RU":"Указан недопустимый язык","zh-CN":"指定的区域设置无效","ja-JP":"無効なロケールが指定されました","tr-TR":"Geçersiz yerel ayarı belirtildi"};return t[e]||t["en-US"]}}class $e extends Oe{constructor(e,t,a,n="en-US"){super("INVALID_TIMEZONE",e,"INVALID_TIMEZONE",t,a,n)}translateMessage(e){const t={"en-US":"Invalid timezone specified","es-ES":"Zona horaria inválida especificada","fr-FR":"Fuseau horaire invalide spécifié","de-DE":"Ungültige Zeitzone angegeben","it-IT":"Fuso orario non valido specificato","pt-BR":"Fuso horário inválido especificado","ru-RU":"Указан недопустимый часовой пояс","zh-CN":"指定的时区无效","ja-JP":"無効なタイムゾーンが指定されました","tr-TR":"Geçersiz saat dilimi belirtildi"};return t[e]||t["en-US"]}}class Ue extends Oe{constructor(e,t,a,n="en-US"){super("PARSING_ERROR",e,"PARSING_ERROR",t,a,n)}translateMessage(e){const t={"en-US":"Failed to parse date/time","es-ES":"Error al analizar fecha/hora","fr-FR":"Échec de l'analyse de la date/heure","de-DE":"Fehler beim Parsen von Datum/Uhrzeit","it-IT":"Errore nell'analisi di data/ora","pt-BR":"Falha ao analisar data/hora","ru-RU":"Ошибка анализа даты/времени","zh-CN":"解析日期/时间失败","ja-JP":"日付/時刻の解析に失敗しました","tr-TR":"Tarih/saat ayrıştırma başarısız"};return t[e]||t["en-US"]}}class Be extends Oe{constructor(e,t,a,n,r,i="en-US"){super("VALIDATION_ERROR",t,"VALIDATION_ERROR",a,r,i),this.field=e,this.value=a,this.constraint=n}translateMessage(e){const t={"en-US":`Validation failed for field '${this.field}'`,"es-ES":`Validación fallida para el campo '${this.field}'`,"fr-FR":`Échec de la validation pour le champ '${this.field}'`,"de-DE":`Validierung fehlgeschlagen für Feld '${this.field}'`,"it-IT":`Validazione fallita per il campo '${this.field}'`,"pt-BR":`Validação falhou para o campo '${this.field}'`,"ru-RU":`Ошибка валидации для поля '${this.field}'`,"zh-CN":`字段'${this.field}'验证失败`,"ja-JP":`フィールド'${this.field}'の検証に失敗しました`,"tr-TR":`'${this.field}' alanı için doğrulama başarısız`};return t[e]||t["en-US"]}toJSON(){return{...super.toJSON(),field:this.field,value:this.value,constraint:this.constraint}}}class Pe extends Oe{constructor(e,t,a,n,r="en-US"){super("PLUGIN_ERROR",a,"PLUGIN_ERROR",e,n,r),this.pluginName=e,this.pluginType=t}translateMessage(e){const t={"en-US":`Plugin '${this.pluginName}' error`,"es-ES":`Error del plugin '${this.pluginName}'`,"fr-FR":`Erreur du plugin '${this.pluginName}'`,"de-DE":`Plugin '${this.pluginName}' Fehler`,"it-IT":`Errore del plugin '${this.pluginName}'`,"pt-BR":`Erro do plugin '${this.pluginName}'`,"ru-RU":`Ошибка плагина '${this.pluginName}'`,"zh-CN":`插件'${this.pluginName}'错误`,"ja-JP":`プラグイン'${this.pluginName}'エラー`,"tr-TR":`'${this.pluginName}' eklenti hatası`};return t[e]||t["en-US"]}toJSON(){return{...super.toJSON(),pluginName:this.pluginName,pluginType:this.pluginType}}}class qe extends Oe{constructor(e,t,a,n,r="en-US"){super("CONFIGURATION_ERROR",t,"CONFIGURATION_ERROR",e,n,r),this.configKey=e,this.configValue=a}translateMessage(e){const t={"en-US":`Configuration error for '${this.configKey}'`,"es-ES":`Error de configuración para '${this.configKey}'`,"fr-FR":`Erreur de configuration pour '${this.configKey}'`,"de-DE":`Konfigurationsfehler für '${this.configKey}'`,"it-IT":`Errore di configurazione per '${this.configKey}'`,"pt-BR":`Erro de configuração para '${this.configKey}'`,"ru-RU":`Ошибка конфигурации для '${this.configKey}'`,"zh-CN":`'${this.configKey}'配置错误`,"ja-JP":`'${this.configKey}'設定エラー`,"tr-TR":`'${this.configKey}' yapılandırma hatası`};return t[e]||t["en-US"]}toJSON(){return{...super.toJSON(),configKey:this.configKey,configValue:this.configValue}}}class _e{static setDefaultLocale(e){this.defaultLocale=e}static createInvalidDate(e,t){return new Ce("Invalid date provided",e,t,this.defaultLocale)}static createInvalidFormat(e,t){return new Fe("Invalid format string: "+e,e,t,this.defaultLocale)}static createInvalidLocale(e,t){return new ze("Invalid locale: "+e,e,t,this.defaultLocale)}static createInvalidTimezone(e,t){return new $e("Invalid timezone: "+e,e,t,this.defaultLocale)}static createParsingError(e,t,a){const n=t?"Failed to parse: "+t.message:"Failed to parse input: "+JSON.stringify(e);return new Ue(n,e,{...a,originalError:t?.message},this.defaultLocale)}static createValidationError(e,t,a,n){return new Be(e,"Validation failed: "+a,t,a,n,this.defaultLocale)}static createPluginError(e,t,a,n){const r="string"==typeof a?a:a.message;return new Pe(e,t,r,{...n,originalError:"string"==typeof a?void 0:a.message},this.defaultLocale)}static createConfigurationError(e,t,a,n){return new qe(e,t,a,n,this.defaultLocale)}}_e.defaultLocale="en-US";class Ve{static isKairosError(e){return e instanceof Oe}static wrapError(e,t="Unknown error occurred"){return e instanceof Oe?e:e instanceof Error?new Ue(t,e.message,{originalError:e.message,stack:e.stack}):new Ue(t,e)}static getErrorDetails(e){if(e instanceof Oe){const t={type:e.type,message:e.getLocalizedMessage(),code:e.code};return void 0!==e.input&&(t.input=e.input),void 0!==e.context&&(t.context=e.context),void 0!==e.stack&&(t.stack=e.stack),t}if(e instanceof Error){const t={type:"GENERIC_ERROR",message:e.message,code:"GENERIC"};return void 0!==e.stack&&(t.stack=e.stack),t}return{type:"UNKNOWN_ERROR",message:e+"",code:"UNKNOWN",input:e}}static formatErrorForUser(e,t){const a=this.getErrorDetails(e),n=t||"en-US";return e instanceof Oe?e.getLocalizedMessage(n):a.message}static formatErrorForLogging(e){const t=this.getErrorDetails(e);return`[${t.type}] ${t.message} (${t.code})`}}class Je{constructor(){this.locales=new Map,this.currentLocale="en-US",this.defaultLocale="en-US"}static getInstance(){return Je.instance||(Je.instance=new Je),Je.instance}register(e,t){this.locales.set(e,t),1===this.locales.size&&(this.defaultLocale=e,this.currentLocale=e)}setLocale(e){return!!this.locales.has(e)&&(this.currentLocale=e,!0)}getLocale(e){const t=e||this.currentLocale;return this.locales.get(t)}getCurrentLocale(){return this.currentLocale}getDefaultLocale(){return this.defaultLocale}setDefaultLocale(e){return!!this.locales.has(e)&&(this.defaultLocale=e,!0)}getHolidays(e,t){const a=this.getLocale(e);if(!a)return[];if(t)switch(t){case"federal":return a.federalHolidays||[];case"state":return a.stateHolidays?Object.values(a.stateHolidays).flat():[];case"public":return a.publicHolidays||[];case"observances":return a.observances||[];default:if(a[t]&&Array.isArray(a[t]))return a[t]}return a.holidays||[]}getStateHolidays(e,t){const a=this.getLocale(t);if(!a||!a.stateHolidays)return[];const n=e.toLowerCase();return a.stateHolidays[n]||[]}getAllHolidays(e){const t=this.getLocale(e);if(!t)return[];const a=[];if(t.holidays&&a.push(...t.holidays),t.federalHolidays&&a.push(...t.federalHolidays),t.stateHolidays)for(const e of Object.values(t.stateHolidays))a.push(...e);t.publicHolidays&&a.push(...t.publicHolidays),t.observances&&a.push(...t.observances);const n=new Map;for(const e of a)n.has(e.name)||n.set(e.name,e);return Array.from(n.values())}getAvailableLocales(){return Array.from(this.locales.keys())}hasLocale(e){return this.locales.has(e)}clear(){this.locales.clear(),this.currentLocale="en-US",this.defaultLocale="en-US"}}const We=Je.getInstance(),Ge=new class{constructor(){this.calculators=new Map,this.cache=i(),this.ruleCache=new Map,this.registerCalculators()}registerCalculators(){}registerCalculator(e,t){this.calculators.set(e,t)}calculate(e,t){const a=M(e);if(a.length>0)throw Error("Invalid holiday rule: "+a.join(", "));this.ruleCache.has(e.name||"unnamed")||this.ruleCache.set(e.name||"unnamed",new Map);const n=this.ruleCache.get(e.name||"unnamed");if(n.has(t))return n.get(t);const r=this.calculators.get(e.type);if(!r)throw Error("Unknown holiday type: "+e.type);let i=r.calculate(e,t);return e.observedRule&&(i=this.applyObservedRules(i,e.observedRule)),e.duration&&e.duration>1&&(i=this.expandDuration(i,e.duration)),n.set(t,i),i}applyObservedRules(e,t){const a=[];for(const n of e){const e=n.getDay();if(t.weekends?.includes(e)||0===e||6===e)switch(t.type){case"substitute":a.push(this.findSubstituteDate(n,t));break;case"nearest-weekday":a.push(this.findNearestWeekday(n));break;case"bridge":a.push(n),a.push(this.findBridgeDate(n));break;default:a.push(n)}else a.push(n)}return a}findSubstituteDate(e,t){const a=t.direction||"forward",n=t.weekends||[0,6],r=new Date(e),i="forward"===a?1:-1;for(;n.includes(r.getDay());)r.setDate(r.getDate()+i);return r}findNearestWeekday(e){const t=e.getDay();return 0===t?new Date(e.getFullYear(),e.getMonth(),e.getDate()+1):6===t?new Date(e.getFullYear(),e.getMonth(),e.getDate()-1):e}findBridgeDate(e){return new Date(e.getFullYear(),e.getMonth(),e.getDate()+1)}expandDuration(e,t){const a=[];for(const n of e)for(let e=0;t>e;e++){const t=new Date(n);t.setDate(t.getDate()+e),a.push(t)}return a}isHoliday(e,t){const a=e.getFullYear();for(const n of t){if(!n.active&&void 0!==n.active)continue;const r=this.calculateWithContext(n,a,t);for(const t of r)if(this.isSameDay(e,t))return{id:n.id||n.name,name:n.name,type:n.type,date:t,regions:n.regions||[]}}return null}getHolidaysForYear(e,t){const a=[];for(const n of t){if(!n.active&&void 0!==n.active)continue;const r=this.calculateWithContext(n,e,t);for(const e of r)a.push({id:n.id||n.name,name:n.name,type:n.type,date:e,regions:n.regions||[]})}return a.sort((e,t)=>e.date.getTime()-t.date.getTime())}calculateWithContext(e,t,a){const n=M(e);if(n.length>0)throw Error("Invalid holiday rule: "+n.join(", "));this.ruleCache.has(e.name||"unnamed")||this.ruleCache.set(e.name||"unnamed",new Map);const r=this.ruleCache.get(e.name||"unnamed");if(r.has(t))return r.get(t);const i=this.calculators.get(e.type);if(!i)throw Error("Unknown holiday type: "+e.type);let s;return s="relative"===e.type?i.calculate(e,t,{holidays:a}):i.calculate(e,t),e.observedRule&&(s=this.applyObservedRules(s,e.observedRule)),e.duration&&e.duration>1&&(s=this.expandDuration(s,e.duration)),r.set(t,s),s}getHolidaysInRange(e,t,a){const n=[],r=e.getFullYear(),i=t.getFullYear();for(let s=r;i>=s;s++){const r=this.getHolidaysForYear(s,a);for(const a of r)a.date<e||a.date>t||n.push(a)}return n}getNextHoliday(e,t){const a=e.getFullYear(),n=this.getHolidaysForYear(a,t);for(const t of n)if(t.date>e)return t;return this.getHolidaysForYear(a+1,t)[0]||null}getPreviousHoliday(e,t){const a=e.getFullYear(),n=this.getHolidaysForYear(a,t);for(let t=n.length-1;t>=0;t--){const a=n[t];if(a.date<e)return a}const r=this.getHolidaysForYear(a-1,t);return r[r.length-1]||null}isSameDay(e,t){return e.getFullYear()===t.getFullYear()&&e.getMonth()===t.getMonth()&&e.getDate()===t.getDate()}clearCache(){this.cache.clear(),this.ruleCache.clear()}};var Ze={name:"holiday-engine",version:"1.0.0",size:2048,install(e,t){e.extend({isHoliday(e){const t=e||We.getHolidays();return null!==Ge.isHoliday(this.toDate(),t)},getHolidayInfo(e){const t=e||We.getHolidays();return Ge.isHoliday(this.toDate(),t)},nextHoliday(t){const a=t||We.getHolidays(),n=Ge.getNextHoliday(this.toDate(),a);return n?e(n.date):null},previousHoliday(t){const a=t||We.getHolidays(),n=Ge.getPreviousHoliday(this.toDate(),a);return n?e(n.date):null},getHolidays:e=>We.getHolidays(void 0,e)}),e.addStatic?.({getYearHolidays:(e,t)=>Ge.getHolidaysForYear(e,t),getHolidaysInRange(t,a,n){const r=e(t).toDate(),i=e(a).toDate();return Ge.getHolidaysInRange(r,i,n)},holidayEngine:Ge})}};class Ke{calculate(e,t){const{month:a,day:n}=e.rule,r=new Date(t,a-1,n);return r.getFullYear()!==t||r.getMonth()!==a-1||r.getDate()!==n?[]:[r]}}var Qe={name:"holiday-fixed-calculator",version:"1.0.0",size:256,dependencies:["holiday-engine"],install(e,t){const a=e.holidayEngine;a&&a.registerCalculator("fixed",new Ke)}};class Xe{calculate(e,t){const{month:a,weekday:n,nth:r}=e.rule;return r>0?[this.getNthWeekdayOfMonth(t,a-1,n,r)]:[this.getLastNthWeekdayOfMonth(t,a-1,n,Math.abs(r))]}getNthWeekdayOfMonth(e,t,a,n){let r=a-new Date(e,t,1).getDay();0>r&&(r+=7);const i=new Date(e,t,1+r+7*(n-1));if(i.getMonth()!==t)throw Error(`${n}${this.getOrdinalSuffix(n)} ${this.getWeekdayName(a)} of ${this.getMonthName(t)} ${e} does not exist`);return i}getLastNthWeekdayOfMonth(e,t,a,n){const r=new Date(e,t+1,0);let i=r.getDay()-a;0>i&&(i+=7);const s=r.getDate()-i-7*(n-1);if(1>s)throw Error(`${n}${this.getOrdinalSuffix(n)} to last ${this.getWeekdayName(a)} of ${this.getMonthName(t)} ${e} does not exist`);return new Date(e,t,s)}getOrdinalSuffix(e){if(e>=11&&13>=e)return"th";switch(e%10){case 1:return"st";case 2:return"nd";case 3:return"rd";default:return"th"}}getWeekdayName(e){return["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][e]||"Unknown"}getMonthName(e){return["January","February","March","April","May","June","July","August","September","October","November","December"][e]||"Unknown"}}var et={name:"holiday-nth-weekday-calculator",version:"1.0.0",size:512,dependencies:["holiday-engine"],install(e,t){const a=e.holidayEngine;a&&a.registerCalculator("nth-weekday",new Xe)}};class tt{calculate(e,t){const{offset:a}=e.rule,n=this.calculateEaster(t),r=new Date(n);return r.setDate(r.getDate()+a),[r]}calculateEaster(e){if(1583>e)return this.calculateJulianEaster(e);const t=e%19,a=Math.floor(e/100),n=e%100,r=a%4,i=(19*t+a-Math.floor(a/4)-Math.floor((a-Math.floor((a+8)/25)+1)/3)+15)%30,s=(32+2*r+2*Math.floor(n/4)-i-n%4)%7,o=Math.floor((t+11*i+22*s)/451);return new Date(e,Math.floor((i+s-7*o+114)/31)-1,(i+s-7*o+114)%31+1)}calculateJulianEaster(e){const t=(e%19*19+15)%30,a=(e%4*2+e%7*4-t+34)%7,n=new Date(e,Math.floor((t+a+114)/31)-1,(t+a+114)%31+1),r=this.dateToJulianDay(n);return this.julianDayToDate(r)}dateToJulianDay(e){const t=e.getFullYear(),a=e.getMonth()+1,n=e.getDate(),r=Math.floor((14-a)/12),i=t+4800-r;return n+Math.floor((153*(a+12*r-3)+2)/5)+365*i+Math.floor(i/4)-Math.floor(i/100)+Math.floor(i/400)-32045}julianDayToDate(e){const t=e+32044,a=(4*t+3)/146097,n=t-Math.floor(146097*a/4),r=(4*n+3)/1461,i=n-Math.floor(1461*r/4),s=(5*i+2)/153,o=i-Math.floor((153*s+2)/5)+1,d=s+3-12*Math.floor(s/10);return new Date(100*a+r-4800+Math.floor(s/10),d-1,o)}calculateOrthodoxEaster(e){const t=(e%19*19+15)%30,a=(e%4*2+e%7*4-t+34)%7,n=new Date(e,Math.floor((t+a+114)/31)-1,(t+a+114)%31+1),r=this.getJulianGregorianDifference(e),i=new Date(n);return i.setDate(i.getDate()+r),i}getJulianGregorianDifference(e){if(1583>e)return 0;const t=Math.floor(e/100);return t-Math.floor(t/4)-2}}var at={name:"holiday-easter-calculator",version:"1.0.0",size:1024,dependencies:["holiday-engine"],install(e,t){const a=e.holidayEngine;a&&a.registerCalculator("easter-based",new tt),e.addStatic?.({getEaster(t){const a=(new tt).calculateEaster(t);return e(a)},getOrthodoxEaster(t){const a=(new tt).calculateOrthodoxEaster(t);return e(a)}})}};class nt{constructor(){this.converters={islamic:new rt,chinese:new it,hebrew:new st,persian:new ot}}calculate(e,t){const{calendar:a,month:n,day:r}=e.rule,i=this.converters[a];if(!i)throw Error("Unknown lunar calendar: "+a);const s=this.getLunarYear(t,a);return[i.toGregorian(s,n,r)]}getLunarYear(e,t){switch(t){case"islamic":return Math.round(1.030684*(e-622));case"chinese":return e-2637;case"hebrew":return e+3761;case"persian":return e-622;default:return e}}}class rt{toGregorian(e,t,a){const n=354.36667*(e-1)+this.getIslamicMonthDays(t,e)+a-1+1948084;return this.julianDayToGregorian(n)}fromGregorian(e){const t=this.gregorianToJulianDay(e)-1948084,a=354.36667,n=Math.floor(t/a)+1;let r=1,i=t-(n-1)*a;for(;i>this.getIslamicMonthLength(r,n);)i-=this.getIslamicMonthLength(r,n),r++;return{year:n,month:r,day:Math.floor(i)}}getIslamicMonthDays(e,t){let a=0;for(let n=1;e>n;n++)a+=this.getIslamicMonthLength(n,t);return a}getIslamicMonthLength(e,t){return 12===e&&this.isIslamicLeapYear(t)?30:[30,29,30,29,30,29,30,29,30,29,30,29][e-1]||29}isIslamicLeapYear(e){return 11>(11*e+14)%30}julianDayToGregorian(e){const t=e+32044,a=(4*t+3)/146097,n=t-Math.floor(146097*a/4),r=(4*n+3)/1461,i=n-Math.floor(1461*r/4),s=(5*i+2)/153,o=i-Math.floor((153*s+2)/5)+1,d=s+3-12*Math.floor(s/10);return new Date(100*a+r-4800+Math.floor(s/10),d-1,o)}gregorianToJulianDay(e){const t=e.getFullYear(),a=e.getMonth()+1,n=e.getDate(),r=Math.floor((14-a)/12),i=t+4800-r;return n+Math.floor((153*(a+12*r-3)+2)/5)+365*i+Math.floor(i/4)-Math.floor(i/100)+Math.floor(i/400)-32045}}class it{toGregorian(e,t,a){const n=e+2637,r=Math.floor(30*Math.random())+21,i=29.5*(t-1)+a-1,s=new Date(new Date(n,0,r));return s.setDate(s.getDate()+i),s}fromGregorian(e){return{year:e.getFullYear()-2637,month:e.getMonth()+1,day:e.getDate()}}}class st{toGregorian(e,t,a){const n=29.5*(t-1)+a-1,r=new Date(new Date(e-3761,8,15));return r.setDate(r.getDate()+n),r}fromGregorian(e){return{year:e.getFullYear()+3761,month:e.getMonth()+1,day:e.getDate()}}}class ot{toGregorian(e,t,a){const n=30*(t-1)+a-1,r=new Date(new Date(e+622,2,21));return r.setDate(r.getDate()+n),r}fromGregorian(e){return{year:e.getFullYear()-622,month:e.getMonth()+1,day:e.getDate()}}}var dt={name:"holiday-lunar-calculator",version:"1.0.0",size:2048,dependencies:["holiday-engine"],install(e,t){const a=e.holidayEngine;a&&a.registerCalculator("lunar",new nt)}};class lt{constructor(){this.holidayCache=new Map,this.allHolidays=[]}calculate(e,t,a){const{relativeTo:n,offset:r}=e.rule;a?.holidays&&(this.allHolidays=a.holidays);const i=this.findBaseHoliday(n);if(!i)throw Error(`Base holiday '${n}' not found for relative rule '${e.name}'`);const s=this.calculateBaseHolidayDates(i,t),o=[];for(const e of s){const t=new Date(e);t.setDate(t.getDate()+r),o.push(t)}return o}findBaseHoliday(e){let t=this.allHolidays.find(t=>t.name===e);return t||(t=this.allHolidays.find(t=>t.id===e)),t||(t=this.allHolidays.find(t=>t.name.toLowerCase()===e.toLowerCase())),t||null}calculateBaseHolidayDates(e,t){if("relative"===e.type)throw Error(`Circular dependency detected: ${e.name} cannot be relative to another relative holiday`);const a=`${e.name}-${t}`;if(this.holidayCache.has(a))return this.holidayCache.get(a);const n=this.calculateDirectHoliday(e,t);return this.holidayCache.set(a,n),n}calculateDirectHoliday(e,t){switch(e.type){case"fixed":return this.calculateFixed(e,t);case"nth-weekday":return this.calculateNthWeekday(e,t);case"easter-based":return this.calculateEasterBased(e,t);default:throw Error("Cannot calculate base holiday of type: "+e.type)}}calculateFixed(e,t){const{month:a,day:n}=e.rule,r=new Date(t,a-1,n);return r.getFullYear()!==t||r.getMonth()!==a-1||r.getDate()!==n?[]:[r]}calculateNthWeekday(e,t){const{month:a,weekday:n,nth:r}=e.rule;return r>0?[this.getNthWeekdayOfMonth(t,a-1,n,r)]:[this.getLastNthWeekdayOfMonth(t,a-1,n,Math.abs(r))]}calculateEasterBased(e,t){const{offset:a}=e.rule,n=this.calculateEaster(t),r=new Date(n);return r.setDate(r.getDate()+a),[r]}getNthWeekdayOfMonth(e,t,a,n){let r=a-new Date(e,t,1).getDay();return 0>r&&(r+=7),new Date(e,t,1+r+7*(n-1))}getLastNthWeekdayOfMonth(e,t,a,n){const r=new Date(e,t+1,0);let i=r.getDay()-a;0>i&&(i+=7);const s=r.getDate()-i-7*(n-1);return new Date(e,t,s)}calculateEaster(e){const t=e%19,a=Math.floor(e/100),n=e%100,r=a%4,i=(19*t+a-Math.floor(a/4)-Math.floor((a-Math.floor((a+8)/25)+1)/3)+15)%30,s=(32+2*r+2*Math.floor(n/4)-i-n%4)%7,o=Math.floor((t+11*i+22*s)/451);return new Date(e,Math.floor((i+s-7*o+114)/31)-1,(i+s-7*o+114)%31+1)}clearCache(){this.holidayCache.clear()}}var ut={name:"holiday-relative-calculator",version:"1.0.0",size:1024,dependencies:["holiday-engine"],install(e,t){const a=e.holidayEngine;a&&a.registerCalculator("relative",new lt)}};class ct{calculate(e,t,a){const{calculate:n}=e.rule;if("function"!=typeof n)throw Error(`Custom rule '${e.name}' must have a calculate function`);try{const r=n(t,a);if(r instanceof Date)return[r];if(Array.isArray(r))return r.filter(e=>e instanceof Date);throw Error(`Custom rule '${e.name}' must return Date or Date[]`)}catch(t){throw Error(`Error calculating custom rule '${e.name}': ${t instanceof Error?t.message:t+""}`)}}}const ht={calculateVernalEquinox(e){const t=new Date(e,2,20),a=Math.floor(.24*(e-2e3));return t.setDate(t.getDate()+a),t},calculateAutumnalEquinox(e){const t=new Date(e,8,23),a=Math.floor(.24*(e-2e3));return t.setDate(t.getDate()+a),t},calculateSummerSolstice(e){const t=new Date(e,5,21),a=Math.floor(.24*(e-2e3));return t.setDate(t.getDate()+a),t},calculateWinterSolstice(e){const t=new Date(e,11,21),a=Math.floor(.24*(e-2e3));return t.setDate(t.getDate()+a),t},findWeekdayInMonth(e,t,a,n){if("first"===n){let n=a-new Date(e,t,1).getDay();return 0>n&&(n+=7),new Date(e,t,1+n)}{const n=new Date(e,t+1,0);let r=n.getDay()-a;return 0>r&&(r+=7),new Date(e,t,n.getDate()-r)}},calculateNewMoon(e,t){const a=new Date(e,t,0).getDate();return new Date(e,t-1,Math.floor(.5*a))},calculateFullMoon(e,t){const a=this.calculateNewMoon(e,t),n=new Date(a);return n.setDate(n.getDate()+14),n},getNextBusinessDay(e){const t=new Date(e);for(t.setDate(t.getDate()+1);0===t.getDay()||6===t.getDay();)t.setDate(t.getDate()+1);return t},getPreviousBusinessDay(e){const t=new Date(e);for(t.setDate(t.getDate()-1);0===t.getDay()||6===t.getDay();)t.setDate(t.getDate()-1);return t},getDateInTimezone:(e,t)=>new Date(e.toLocaleString("en-US",{timeZone:t})),getDSTTransition(e,t){return"spring"===t?this.findWeekdayInMonth(e,2,0,"first"):this.findWeekdayInMonth(e,10,0,"first")},calculateGoldenWeekSubstitutes(e){const t=[new Date(e,3,29),new Date(e,4,3),new Date(e,4,4),new Date(e,4,5)],a=[];for(const e of t)if(0===e.getDay()){const t=new Date(e);t.setDate(t.getDate()+1),a.push(t)}return a},calculateQingming(e){const t=new Date(e,3,5),a=Math.floor(.24*(e-2e3));return t.setDate(t.getDate()+a),t}};var mt={name:"holiday-custom-calculator",version:"1.0.0",size:1536,dependencies:["holiday-engine"],install(e,t){const a=e.holidayEngine;a&&a.registerCalculator("custom",new ct),e.addStatic?.({customCalculatorUtils:ht})}};class yt{constructor(e={}){this.cache=new Map,this.config={weekends:[0,6],holidays:[],customRules:[],...e}}updateConfig(e){this.config={...this.config,...e},this.cache.clear()}isBusinessDay(e){const t=e.toISOString().split("T")[0];if(this.cache.has(t))return this.cache.get(t);const a=this.calculateIsBusinessDay(e);return this.cache.set(t,a),a}calculateIsBusinessDay(e){const t=e.getDay();if(this.config.weekends?.includes(t))return!1;if(this.config.holidays&&this.config.holidays.length>0){const t=globalThis.kairos?.holidayEngine;if(t&&t.isHoliday(e,this.config.holidays))return!1}if(this.config.customRules)for(const t of this.config.customRules)if(!t(e))return!1;return!0}nextBusinessDay(e){const t=new Date(e);for(t.setDate(t.getDate()+1);!this.isBusinessDay(t);)t.setDate(t.getDate()+1);return t}previousBusinessDay(e){const t=new Date(e);for(t.setDate(t.getDate()-1);!this.isBusinessDay(t);)t.setDate(t.getDate()-1);return t}addBusinessDays(e,t){if(0===t)return new Date(e);const a=new Date(e);let n=0;const r=t>0?1:-1,i=Math.abs(t);for(;i>n;)a.setDate(a.getDate()+r),this.isBusinessDay(a)&&n++;return a}businessDaysBetween(e,t){const a=new Date(e),n=new Date(t);if(a.getTime()===n.getTime())return 0;const r=n>a?1:-1;let i=0;const s=new Date(a);for(;s.getTime()!==n.getTime();)s.setDate(s.getDate()+r),this.isBusinessDay(s)&&i++;return i*r}businessDaysInMonth(e,t){const a=new Date(e,t,1),n=new Date(e,t+1,0);return this.businessDaysBetween(a,n)+(this.isBusinessDay(a)?1:0)}businessDaysInYear(e){const t=new Date(e,0,1),a=new Date(e,11,31);return this.businessDaysBetween(t,a)+(this.isBusinessDay(t)?1:0)}settlementDate(e,t){return this.addBusinessDays(e,t)}getBusinessDaysInMonth(e,t){const a=[],n=new Date(e,t,1),r=new Date(e,t+1,0),i=new Date(n);for(;r>=i;)this.isBusinessDay(i)&&a.push(new Date(i)),i.setDate(i.getDate()+1);return a}getBusinessDaysInRange(e,t){const a=[],n=new Date(e);for(;t>=n;)this.isBusinessDay(n)&&a.push(new Date(n)),n.setDate(n.getDate()+1);return a}getNthBusinessDay(e,t,a){const n=new Date(e,t,1),r=new Date(e,t+1,0),i=new Date(n);let s=0;for(;r>=i;){if(this.isBusinessDay(i)&&(s++,s===a))return new Date(i);i.setDate(i.getDate()+1)}return null}getLastBusinessDay(e,t){const a=new Date(new Date(e,t+1,0));for(;a.getMonth()===t;){if(this.isBusinessDay(a))return new Date(a);a.setDate(a.getDate()-1)}return null}clearCache(){this.cache.clear()}}const ft=new yt;var pt={name:"business-workday",version:"1.0.0",size:2048,dependencies:["holiday-engine"],install(e,t){e.extend({isBusinessDay(e){const t=e?new yt(e):ft;if(!e?.holidays&&this.getHolidays){const e=this.getHolidays();t.updateConfig({holidays:e})}return t.isBusinessDay(this.toDate())},isWeekend(){const e=this.day();return 0===e||6===e},nextBusinessDay(t){const a=t?new yt(t):ft;if(!t?.holidays&&this.getHolidays){const e=this.getHolidays();a.updateConfig({holidays:e})}const n=a.nextBusinessDay(this.toDate());return e(n)},previousBusinessDay(t){const a=t?new yt(t):ft;if(!t?.holidays&&this.getHolidays){const e=this.getHolidays();a.updateConfig({holidays:e})}const n=a.previousBusinessDay(this.toDate());return e(n)},addBusinessDays(t,a){const n=a?new yt(a):ft;if(!a?.holidays&&this.getHolidays){const e=this.getHolidays();n.updateConfig({holidays:e})}const r=n.addBusinessDays(this.toDate(),t);return e(r)},businessDaysBetween(e,t){const a=t?new yt(t):ft;if(!t?.holidays&&this.getHolidays){const e=this.getHolidays();a.updateConfig({holidays:e})}return a.businessDaysBetween(this.toDate(),e.toDate())},businessDaysInMonth(e){const t=e?new yt(e):ft;if(!e?.holidays&&this.getHolidays){const e=this.getHolidays();t.updateConfig({holidays:e})}return t.businessDaysInMonth(this.year(),this.month()-1)},settlementDate(t,a){const n=a?new yt(a):ft;if(!a?.holidays&&this.getHolidays){const e=this.getHolidays();n.updateConfig({holidays:e})}const r=n.settlementDate(this.toDate(),t);return e(r)},isWorkingHour(e=9,t=17){const a=this.hour();return this.isBusinessDay()&&a>=e&&t>a}}),e.addStatic?.({businessDayCalculator:ft,createBusinessDayCalculator:e=>new yt(e),getBusinessDaysInMonth:(t,a,n)=>(n?new yt(n):ft).getBusinessDaysInMonth(t,a-1).map(t=>e(t)),getBusinessDaysInRange(t,a,n){const r=n?new yt(n):ft,i=e(t).toDate(),s=e(a).toDate();return r.getBusinessDaysInRange(i,s).map(t=>e(t))},getNthBusinessDay(t,a,n,r){const i=(r?new yt(r):ft).getNthBusinessDay(t,a-1,n);return i?e(i):null},getLastBusinessDay(t,a,n){const r=(n?new yt(n):ft).getLastBusinessDay(t,a-1);return r?e(r):null},businessDaysInYear:(e,t)=>(t?new yt(t):ft).businessDaysInYear(e)})}};class gt{constructor(e){this.config=e}getStartMonth(){if("number"==typeof this.config.start)return this.config.start;const e=["january","february","march","april","may","june","july","august","september","october","november","december"].indexOf(this.config.start.toLowerCase());return-1===e?1:e+1}getFiscalYear(e){const t=this.getStartMonth(),a=e.getFullYear();return t>e.getMonth()+1?a-1:a}getFiscalYearStart(e){const t=this.getStartMonth();return new Date(e,t-1,1)}getFiscalYearEnd(e){const t=this.getStartMonth(),a=1===t?12:t-1,n=1===t?e:e+1,r=new Date(n,a,0).getDate();return new Date(n,a-1,r)}getFiscalQuarter(e){const t=this.getStartMonth();let a=e.getMonth()+1-t;return 0>a&&(a+=12),Math.floor(a/3)+1}getFiscalQuarterStart(e,t){const a=this.getStartMonth();return new Date(1===t?e:a+3*(t-1)>12?e+1:e,(a-1+3*(t-1))%12,1)}getFiscalQuarterEnd(e,t){const a=this.getStartMonth(),n=(a-1+3*t-1)%12,r=1===t?e:a+3*t-1>12?e+1:e,i=new Date(r,n+1,0).getDate();return new Date(r,n,i)}getDaysInFiscalYear(e){const t=this.getFiscalYearStart(e),a=this.getFiscalYearEnd(e);return Math.floor((a.getTime()-t.getTime())/864e5)+1}getDaysInFiscalQuarter(e,t){const a=this.getFiscalQuarterStart(e,t),n=this.getFiscalQuarterEnd(e,t);return Math.floor((n.getTime()-a.getTime())/864e5)+1}getFiscalWeek(e){const t=this.getFiscalYear(e),a=this.getFiscalYearStart(t),n=e.getTime()-a.getTime();return Math.floor(Math.floor(n/864e5)/7)+1}static getCommonConfigs(){return{US:{start:10},UK:{start:4},Canada:{start:4},Australia:{start:7},India:{start:4},Japan:{start:4},Germany:{start:1},France:{start:1},China:{start:1},Brazil:{start:1},Russia:{start:1},"South Korea":{start:1},Singapore:{start:4},"Hong Kong":{start:4},"New Zealand":{start:4},Mexico:{start:1},"South Africa":{start:3},Turkey:{start:1},Israel:{start:1},"Saudi Arabia":{start:1},UAE:{start:1},Egypt:{start:7},Nigeria:{start:1},Kenya:{start:7},"Corporate-Q1":{start:1},"Corporate-Q2":{start:4},"Corporate-Q3":{start:7},"Corporate-Q4":{start:10},"Academic-US":{start:8},"Academic-UK":{start:9},"Retail-US":{start:2},"Retail-4-5-4":{start:2}}}}var wt={name:"business-fiscal",version:"1.0.0",size:1536,dependencies:["business-workday"],install(e,t){e.extend({fiscalYear(e){return new gt(e||{start:1}).getFiscalYear(this.toDate())},fiscalYearStart(t){const a=new gt(t||{start:1}),n=a.getFiscalYear(this.toDate()),r=a.getFiscalYearStart(n);return e(r)},fiscalYearEnd(t){const a=new gt(t||{start:1}),n=a.getFiscalYear(this.toDate()),r=a.getFiscalYearEnd(n);return e(r)},fiscalQuarter(e){return new gt(e||{start:1}).getFiscalQuarter(this.toDate())},fiscalQuarterStart(t){const a=new gt(t||{start:1}),n=a.getFiscalYear(this.toDate()),r=a.getFiscalQuarter(this.toDate()),i=a.getFiscalQuarterStart(n,r);return e(i)},fiscalQuarterEnd(t){const a=new gt(t||{start:1}),n=a.getFiscalYear(this.toDate()),r=a.getFiscalQuarter(this.toDate()),i=a.getFiscalQuarterEnd(n,r);return e(i)},fiscalWeek(e){return new gt(e||{start:1}).getFiscalWeek(this.toDate())},isFiscalYearStart(t){const a=new gt(t||{start:1}),n=a.getFiscalYear(this.toDate()),r=a.getFiscalYearStart(n);return this.isSame(e(r))},isFiscalYearEnd(t){const a=new gt(t||{start:1}),n=a.getFiscalYear(this.toDate()),r=a.getFiscalYearEnd(n);return this.isSame(e(r))},isFiscalQuarterStart(t){const a=new gt(t||{start:1}),n=a.getFiscalYear(this.toDate()),r=a.getFiscalQuarter(this.toDate()),i=a.getFiscalQuarterStart(n,r);return this.isSame(e(i))},isFiscalQuarterEnd(t){const a=new gt(t||{start:1}),n=a.getFiscalYear(this.toDate()),r=a.getFiscalQuarter(this.toDate()),i=a.getFiscalQuarterEnd(n,r);return this.isSame(e(i))}}),e.addStatic?.({fiscalYearCalculator:gt,getFiscalYearConfig:e=>gt.getCommonConfigs()[e]||null,getAvailableFiscalConfigs:()=>Object.keys(gt.getCommonConfigs()),createFiscalCalculator:e=>new gt(e),getFiscalYearInfo(t,a){const n=new gt(a||{start:1});return{fiscalYear:t,start:e(n.getFiscalYearStart(t)),end:e(n.getFiscalYearEnd(t)),days:n.getDaysInFiscalYear(t),quarters:[1,2,3,4].map(a=>({quarter:a,start:e(n.getFiscalQuarterStart(t,a)),end:e(n.getFiscalQuarterEnd(t,a)),days:n.getDaysInFiscalQuarter(t,a)}))}},getBusinessDaysInFiscalYear(t,a){const n=new gt(a||{start:1}),r=n.getFiscalYearStart(t),i=n.getFiscalYearEnd(t),s=e.businessDayCalculator;return s.businessDaysBetween(r,i)+(s.isBusinessDay(r)?1:0)}})}};const bt={future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},Mt={en:bt,"en-US":bt,"en-GB":bt,de:{future:"in %s",past:"vor %s",s:"ein paar Sekunden",m:"eine Minute",mm:"%d Minuten",h:"eine Stunde",hh:"%d Stunden",d:"ein Tag",dd:"%d Tage",M:"ein Monat",MM:"%d Monate",y:"ein Jahr",yy:"%d Jahre"},"de-DE":{future:"in %s",past:"vor %s",s:"ein paar Sekunden",m:"eine Minute",mm:"%d Minuten",h:"eine Stunde",hh:"%d Stunden",d:"ein Tag",dd:"%d Tage",M:"ein Monat",MM:"%d Monate",y:"ein Jahr",yy:"%d Jahre"},tr:{future:"%s içinde",past:"%s önce",s:"birkaç saniye",m:"bir dakika",mm:"%d dakika",h:"bir saat",hh:"%d saat",d:"bir gün",dd:"%d gün",M:"bir ay",MM:"%d ay",y:"bir yıl",yy:"%d yıl"},"tr-TR":{future:"%s içinde",past:"%s önce",s:"birkaç saniye",m:"bir dakika",mm:"%d dakika",h:"bir saat",hh:"%d saat",d:"bir gün",dd:"%d gün",M:"bir ay",MM:"%d ay",y:"bir yıl",yy:"%d yıl"},ja:{future:"%s後",past:"%s前",s:"数秒",m:"1分",mm:"%d分",h:"1時間",hh:"%d時間",d:"1日",dd:"%d日",M:"1ヶ月",MM:"%dヶ月",y:"1年",yy:"%d年"},"ja-JP":{future:"%s後",past:"%s前",s:"数秒",m:"1分",mm:"%d分",h:"1時間",hh:"%d時間",d:"1日",dd:"%d日",M:"1ヶ月",MM:"%dヶ月",y:"1年",yy:"%d年"}};class Dt{constructor(e="en"){this.locale=Mt[e]||Mt[e.split("-")[0]]||bt}format(e,t=!1){const a=Math.round(Math.abs(e)/1e3),n=Math.round(a/60),r=Math.round(n/60),i=Math.round(r/24),s=Math.round(i/30.436875),o=Math.round(i/365.25);let d;return d=45>a?this.locale.s:90>a?this.locale.m:45>n?this.locale.mm.replace("%d",n.toString()):90>n?this.locale.h:22>r?this.locale.hh.replace("%d",r.toString()):36>r?this.locale.d:26>i?this.locale.dd.replace("%d",i.toString()):46>i?this.locale.M:320>i?this.locale.MM.replace("%d",s.toString()):548>i?this.locale.y:this.locale.yy.replace("%d",o.toString()),t?d:(e>0?this.locale.future:this.locale.past).replace("%s",d)}formatNative(e,t="en",a={}){if("undefined"!=typeof Intl&&Intl.RelativeTimeFormat){const n=new Intl.RelativeTimeFormat(t,{numeric:a.numeric||"auto",style:a.style||"long"}),r=Math.abs(e)/1e3,i=r/60,s=i/60,o=s/24,d=o/7,l=o/30.436875,u=o/365.25,c=e>0?1:-1;return 1>u?1>l?1>d?1>o?1>s?1>i?n.format(c*Math.round(r),"second"):n.format(c*Math.round(i),"minute"):n.format(c*Math.round(s),"hour"):n.format(c*Math.round(o),"day"):n.format(c*Math.round(d),"week"):n.format(c*Math.round(l),"month"):n.format(c*Math.round(u),"year")}return this.format(e)}}const xt={name:"relativeTime",install(e){e.extend({fromNow(e=!1){const t=Date.now(),a=this.valueOf()-t;return(new Dt).format(a,e)},from(e,t=!1){const a=this.valueOf()-e.valueOf();return(new Dt).format(a,t)},toNow(e=!1){const t=Date.now()-this.valueOf();return(new Dt).format(t,e)},to(e,t=!1){const a=this.valueOf(),n=e.valueOf()-a;return(new Dt).format(n,t)},humanize(e=!1){const t=new Dt,a=this.valueOf();return t.format(a,!e)},fromNowNative(e="en",t){const a=Date.now(),n=this.valueOf()-a;return(new Dt).formatNative(n,e,t)},toNowNative(e="en",t){const a=Date.now()-this.valueOf();return(new Dt).formatNative(a,e,t)}}),e.addStatic({relativeTime:{registerLocale(e,t){Mt[e]=t},getLocale:e=>Mt[e],calculator:e=>new Dt(e)}})}};class vt{static getISOWeek(e){const t=new Date(e.getTime());t.setHours(0,0,0,0),t.setDate(t.getDate()+4-(t.getDay()||7));const a=new Date(t.getFullYear(),0,1);return Math.ceil(((t.getTime()-a.getTime())/864e5+1)/7)}static getISOWeekYear(e){const t=new Date(e.getTime());return t.setDate(t.getDate()+4-(t.getDay()||7)),t.getFullYear()}static getWeek(e,t=0){const a=new Date(e.getTime());a.setHours(0,0,0,0);const n=new Date(a.getFullYear(),0,1);n.setHours(0,0,0,0);const r=(t-n.getDay()+7)%7,i=new Date(n);r>0&&i.setDate(n.getDate()+r-7);const s=Math.floor((a.getTime()-i.getTime())/864e5),o=Math.floor(s/7)+1;if(1>o){const e=new Date(a.getFullYear()-1,11,31);return this.getWeek(e,t)}return o}static getQuarter(e){return Math.floor(e.getMonth()/3)+1}static getDayOfYear(e){const t=new Date(e.getFullYear(),0,0),a=e.getTime()-t.getTime();return Math.floor(a/864e5)}static getDaysInMonth(e){return new Date(e.getFullYear(),e.getMonth()+1,0).getDate()}static getDaysInYear(e){return this.isLeapYear(e)?366:365}static isLeapYear(e){return e%4==0&&e%100!=0||e%400==0}static getWeekOfMonth(e,t=0){const a=(new Date(e.getFullYear(),e.getMonth(),1).getDay()-t+7)%7,n=e.getDate();return Math.ceil((n+a)/7)}static getCalendarInfo(e){const t=e.getFullYear();return{year:t,quarter:this.getQuarter(e),month:e.getMonth()+1,week:this.getWeek(e),weekYear:t,isoWeek:this.getISOWeek(e),isoWeekYear:this.getISOWeekYear(e),dayOfYear:this.getDayOfYear(e),dayOfWeek:e.getDay(),daysInMonth:this.getDaysInMonth(e),daysInYear:this.getDaysInYear(t),isLeapYear:this.isLeapYear(t),weekOfMonth:this.getWeekOfMonth(e)}}}const kt={name:"calendar",install(e){e.extend({quarter(e){const t=vt.getQuarter(this.toDate());if(void 0===e)return t;if(1>e||e>4)throw Error("Quarter must be between 1 and 4");const a=3*(e-1)+1;return this.clone().month(a)},week(e){const t=vt.getWeek(this.toDate());if(void 0===e)return t;const a=e-t;return this.clone().add(7*a,"days")},isoWeek(e){const t=vt.getISOWeek(this.toDate());if(void 0===e)return t;const a=e-t;return this.clone().add(7*a,"days")},isoWeekYear(){return vt.getISOWeekYear(this.toDate())},weekYear(){return this.year()},dayOfYear(t){const a=vt.getDayOfYear(this.toDate());if(void 0===t)return a;const n=this.clone(),r=new Date(n.year(),0,1);return r.setDate(t),e(r)},daysInMonth(){return vt.getDaysInMonth(this.toDate())},daysInYear(){return vt.getDaysInYear(this.year())},isLeapYear(){return vt.isLeapYear(this.year())},weekOfMonth(){return vt.getWeekOfMonth(this.toDate())},calendarInfo(){return vt.getCalendarInfo(this.toDate())},startOfQuarter(){const t=3*(this.quarter()-1);return e(new Date(this.year(),t,1)).startOf("day")},endOfQuarter(){const t=3*this.quarter();return e(new Date(this.year(),t,0)).endOf("day")},startOfWeek(e=0){const t=this.clone(),a=t.day(),n=(e>a?-7:0)+e-a;return t.add(n,"days").startOf("day")},endOfWeek(e=0){const t=this.clone(),a=t.day(),n=(e>a?-7:0)+e-a+6;return t.add(n,"days").endOf("day")},startOfISOWeek(){return this.startOfWeek(1)},endOfISOWeek(){return this.endOfWeek(1)},isWeekend(){const e=this.day();return 0===e||6===e},isWeekday(){return!this.isWeekend()},isSameQuarter(e){return this.quarter()===e.quarter()&&this.year()===e.year()},isSameWeek(e,t=0){const a=this.startOfWeek(t),n=e.startOfWeek(t);return a.format("YYYY-MM-DD")===n.format("YYYY-MM-DD")},isSameISOWeek(e){return this.isoWeek()===e.isoWeek()&&this.isoWeekYear()===e.isoWeekYear()},weeksInYear(){const t=e(new Date(this.year(),11,31));return vt.getWeek(t.toDate())},isoWeeksInYear(){const e=this.year(),t=vt.getISOWeek(new Date(e,11,31));return 1===t?vt.getISOWeek(new Date(e,11,24)):t}}),e.addStatic({calendar:vt})}},St=[{id:"new-years-day",name:"New Year's Day",type:"fixed",rule:{month:1,day:1},observedRule:{type:"substitute",weekends:[0,6],direction:"forward"}},{id:"independence-day",name:"Independence Day",type:"fixed",rule:{month:7,day:4},observedRule:{type:"substitute",weekends:[0,6],direction:"forward"}},{id:"veterans-day",name:"Veterans Day",type:"fixed",rule:{month:11,day:11},observedRule:{type:"substitute",weekends:[0,6],direction:"forward"}},{id:"juneteenth",name:"Juneteenth",type:"fixed",rule:{month:6,day:19},observedRule:{type:"substitute",weekends:[0,6],direction:"forward"}},{id:"christmas-day",name:"Christmas Day",type:"fixed",rule:{month:12,day:25},observedRule:{type:"substitute",weekends:[0,6],direction:"forward"}},{id:"martin-luther-king-day",name:"Martin Luther King Jr. Day",type:"nth-weekday",rule:{month:1,weekday:1,nth:3}},{id:"presidents-day",name:"Presidents' Day",type:"nth-weekday",rule:{month:2,weekday:1,nth:3}},{id:"mothers-day",name:"Mother's Day",type:"nth-weekday",rule:{month:5,weekday:0,nth:2}},{id:"memorial-day",name:"Memorial Day",type:"nth-weekday",rule:{month:5,weekday:1,nth:-1}},{id:"fathers-day",name:"Father's Day",type:"nth-weekday",rule:{month:6,weekday:0,nth:3}},{id:"labor-day",name:"Labor Day",type:"nth-weekday",rule:{month:9,weekday:1,nth:1}},{id:"columbus-day",name:"Columbus Day",type:"nth-weekday",rule:{month:10,weekday:1,nth:2}},{id:"thanksgiving",name:"Thanksgiving",type:"nth-weekday",rule:{month:11,weekday:4,nth:4}},{id:"black-friday",name:"Black Friday",type:"relative",rule:{relativeTo:"thanksgiving",offset:1}},{id:"good-friday",name:"Good Friday",type:"easter-based",rule:{offset:-2}},{id:"easter-sunday",name:"Easter Sunday",type:"easter-based",rule:{offset:0}},{id:"easter-monday",name:"Easter Monday",type:"easter-based",rule:{offset:1}}],Yt={texas:[{id:"texas-independence-day",name:"Texas Independence Day",type:"fixed",rule:{month:3,day:2},regions:["TX"]},{id:"juneteenth",name:"Juneteenth",type:"fixed",rule:{month:6,day:19},regions:["TX"]},{id:"lyndon-b-johnson-day",name:"Lyndon B. Johnson Day",type:"fixed",rule:{month:8,day:27},regions:["TX"]}],california:[{id:"cesar-chavez-day",name:"Cesar Chavez Day",type:"fixed",rule:{month:3,day:31},regions:["CA"]}],hawaii:[{id:"prince-kuhio-day",name:"Prince Kuhio Day",type:"fixed",rule:{month:3,day:26},regions:["HI"]},{id:"kamehameha-day",name:"Kamehameha Day",type:"fixed",rule:{month:6,day:11},regions:["HI"]},{id:"statehood-day",name:"Statehood Day",type:"nth-weekday",rule:{month:8,weekday:5,nth:3},regions:["HI"]}],massachusetts:[{id:"patriots-day",name:"Patriots' Day",type:"nth-weekday",rule:{month:4,weekday:1,nth:3},regions:["MA"]}],maine:[{id:"patriots-day",name:"Patriots' Day",type:"nth-weekday",rule:{month:4,weekday:1,nth:3},regions:["ME"]}]},Et=St.filter(e=>["new-years-day","martin-luther-king-day","presidents-day","memorial-day","juneteenth","independence-day","labor-day","columbus-day","veterans-day","thanksgiving","christmas-day"].includes(e.id||"")),Lt=[...St,...Object.values(Yt).flat()],Rt={name:"English (United States)",code:"en-US",months:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],weekdays:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],weekdaysShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],weekdaysMin:["Su","Mo","Tu","We","Th","Fr","Sa"],formats:{LT:"h:mm A",LTS:"h:mm:ss A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},ordinal:e=>{if(e>=11&&13>=e)return e+"th";switch(e%10){case 1:return e+"st";case 2:return e+"nd";case 3:return e+"rd";default:return e+"th"}},meridiem:(e,t,a)=>{const n=12>e?"AM":"PM";return a?n.toLowerCase():n}};var Ht={name:"locale-en-US",version:"1.0.0",size:1024,dependencies:["holiday-engine"],locale:Rt,install(e,t){We.register("en-US",{...Rt,holidays:St,federalHolidays:Et,stateHolidays:Yt}),e.locales=e.locales||{},e.locales["en-US"]=Rt,e.extend({getUSHolidays(e){if(e){const t=e.toLowerCase(),a=Yt[t];if(a)return[...Et,...a]}return St},getFederalHolidays:()=>Et,getStateHolidays:e=>Yt[e.toLowerCase()]||[],getAllUSHolidays:()=>Lt}),e.addStatic?.({locale(t){if(void 0===t)return We.getCurrentLocale();if(We.setLocale(t))return e.currentLocale=t,e;throw Error(`Locale '${t}' not found`)},getAvailableLocales:()=>Object.keys(e.locales||{})}),e.currentLocale="en-US"}};const It=[{id:"new-years-day",name:"Yılbaşı",type:"fixed",rule:{month:1,day:1}},{id:"national-sovereignty-day",name:"Ulusal Egemenlik ve Çocuk Bayramı",type:"fixed",rule:{month:4,day:23}},{id:"labor-day",name:"Emek ve Dayanışma Günü",type:"fixed",rule:{month:5,day:1}},{id:"ataturk-commemoration-day",name:"Atatürk'ü Anma, Gençlik ve Spor Bayramı",type:"fixed",rule:{month:5,day:19}},{id:"democracy-day",name:"Demokrasi ve Milli Birlik Günü",type:"fixed",rule:{month:7,day:15}},{id:"victory-day",name:"Zafer Bayramı",type:"fixed",rule:{month:8,day:30}},{id:"republic-day",name:"Cumhuriyet Bayramı",type:"fixed",rule:{month:10,day:29}},{id:"ramadan-feast",name:"Ramazan Bayramı",type:"custom",rule:{calculate:e=>{const t={2024:{month:4,day:10},2025:{month:3,day:30},2023:{month:4,day:21}}[e]||{month:4,day:15};return[new Date(e,t.month-1,t.day),new Date(e,t.month-1,t.day+1),new Date(e,t.month-1,t.day+2)]}},duration:3},{id:"sacrifice-feast",name:"Kurban Bayramı",type:"custom",rule:{calculate:e=>{const t={2024:{month:6,day:16},2025:{month:6,day:6},2023:{month:6,day:28}}[e]||{month:6,day:20};return[new Date(e,t.month-1,t.day),new Date(e,t.month-1,t.day+1),new Date(e,t.month-1,t.day+2),new Date(e,t.month-1,t.day+3)]}},duration:4},{id:"mawlid",name:"Mevlid Kandili",type:"lunar",rule:{calendar:"islamic",month:3,day:12}},{id:"regaib-night",name:"Regaib Kandili",type:"custom",rule:{calculate:e=>{const t=new Date(new Date(e,1,15));for(;4!==t.getDay();)t.setDate(t.getDate()+1);return t}}},{id:"miraj-night",name:"Mirac Kandili",type:"lunar",rule:{calendar:"islamic",month:7,day:27}},{id:"laylat-al-baraat",name:"Berat Kandili",type:"lunar",rule:{calendar:"islamic",month:8,day:15}},{id:"laylat-al-qadr",name:"Kadir Gecesi",type:"lunar",rule:{calendar:"islamic",month:9,day:27}},{id:"arafat-day",name:"Arefe Günü",type:"lunar",rule:{calendar:"islamic",month:12,day:9}}],Nt=[{id:"ashura",name:"Aşure Günü",type:"lunar",rule:{calendar:"islamic",month:1,day:10}},{id:"isra-and-miraj",name:"İsra ve Mirac",type:"lunar",rule:{calendar:"islamic",month:7,day:27}},{id:"shab-e-barat",name:"Berat Kandili",type:"lunar",rule:{calendar:"islamic",month:8,day:15}}],Tt=[{id:"conquest-of-istanbul",name:"İstanbul'un Fethi",type:"fixed",rule:{month:5,day:29},active:!1},{id:"gallipoli-victory",name:"Çanakkale Zaferi",type:"fixed",rule:{month:3,day:18},active:!1}],At=[...It,...Nt,...Tt],jt=It.filter(e=>["new-years-day","national-sovereignty-day","labor-day","ataturk-commemoration-day","democracy-day","victory-day","republic-day","ramadan-feast","sacrifice-feast"].includes(e.id||"")),Ot={name:"Türkçe (Türkiye)",code:"tr-TR",months:["Ocak","Şubat","Mart","Nisan","Mayıs","Haziran","Temmuz","Ağustos","Eylül","Ekim","Kasım","Aralık"],monthsShort:["Oca","Şub","Mar","Nis","May","Haz","Tem","Ağu","Eyl","Eki","Kas","Ara"],weekdays:["Pazar","Pazartesi","Salı","Çarşamba","Perşembe","Cuma","Cumartesi"],weekdaysShort:["Paz","Pzt","Sal","Çar","Per","Cum","Cmt"],weekdaysMin:["Pz","Pt","Sa","Ça","Pe","Cu","Ct"],formats:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},ordinal:e=>{if(1===e)return e+"'inci";if(2===e)return e+"'nci";if(3===e)return e+"'üncü";if(4===e)return e+"'üncü";if(5===e)return e+"'inci";if(6===e)return e+"'ncı";if(7===e)return e+"'nci";if(8===e)return e+"'inci";if(9===e)return e+"'uncu";if(10===e)return e+"'uncu";const t=e%100;if(t>=11&&13>=t)return e+"'üncü";switch(e%10){case 1:case 5:case 8:return e+"'inci";case 2:case 7:return e+"'nci";case 3:case 4:default:return e+"'üncü";case 6:return e+"'ncı";case 9:case 0:return e+"'uncu"}},meridiem:(e,t,a)=>""};var Ct={name:"locale-tr-TR",version:"1.0.0",size:1536,dependencies:["holiday-engine"],locale:Ot,install(e,t){We.register("tr-TR",{...Ot,holidays:It,publicHolidays:jt,observances:Nt,historicalHolidays:Tt}),e.locales=e.locales||{},e.locales["tr-TR"]=Ot,e.extend({getTurkishHolidays(e){switch(e){case"public":return jt;case"religious":return It.filter(e=>"lunar"===e.type||"custom"===e.type);case"historical":return Tt;case"all":return At;default:return It}},getPublicHolidays:()=>jt,getReligiousHolidays:()=>It.filter(e=>"lunar"===e.type||"custom"===e.type),getObservances:()=>Nt,isReligiousHoliday(){const e=this.getHolidayInfo();return!!e&&("lunar"===e.type||"custom"===e.type)},isPublicHoliday(){return null!==this.getHolidayInfo(jt)},formatTurkish(e){const t=e||"D MMMM YYYY, dddd";return this.format(t)}}),e.addStatic?.({getRamazanBayrami(t){const a=It.find(e=>"ramadan-feast"===e.id);return a?e.holidayEngine.calculate(a,t).map(t=>e(t)):[]},getKurbanBayrami(t){const a=It.find(e=>"sacrifice-feast"===e.id);return a?e.holidayEngine.calculate(a,t).map(t=>e(t)):[]},getKandilGecesi(t){const a=It.filter(e=>e.name.includes("Kandil")||e.name.includes("Kadir")),n=[];for(const r of a){const a=e.holidayEngine.calculate(r,t);n.push(...a.map(t=>({date:e(t),name:r.name})))}return n.sort((e,t)=>e.date.valueOf()-t.date.valueOf())}})}};const Ft=[{id:"new-years-day",name:"Neujahr",type:"fixed",rule:{month:1,day:1}},{id:"labor-day",name:"Tag der Arbeit",type:"fixed",rule:{month:5,day:1}},{id:"german-unity-day",name:"Tag der Deutschen Einheit",type:"fixed",rule:{month:10,day:3}},{id:"christmas-day",name:"1. Weihnachtstag",type:"fixed",rule:{month:12,day:25}},{id:"boxing-day",name:"2. Weihnachtstag",type:"fixed",rule:{month:12,day:26}},{id:"good-friday",name:"Karfreitag",type:"easter-based",rule:{offset:-2}},{id:"easter-sunday",name:"Ostersonntag",type:"easter-based",rule:{offset:0}},{id:"easter-monday",name:"Ostermontag",type:"easter-based",rule:{offset:1}},{id:"ascension-day",name:"Christi Himmelfahrt",type:"easter-based",rule:{offset:39}},{id:"whit-sunday",name:"Pfingstsonntag",type:"easter-based",rule:{offset:49}},{id:"whit-monday",name:"Pfingstmontag",type:"easter-based",rule:{offset:50}}],zt={"baden-württemberg":[{id:"epiphany",name:"Heilige Drei Könige",type:"fixed",rule:{month:1,day:6},regions:["BW"]},{id:"corpus-christi",name:"Fronleichnam",type:"easter-based",rule:{offset:60},regions:["BW"]},{id:"all-saints-day",name:"Allerheiligen",type:"fixed",rule:{month:11,day:1},regions:["BW"]}],bavaria:[{id:"epiphany",name:"Heilige Drei Könige",type:"fixed",rule:{month:1,day:6},regions:["BY"]},{id:"corpus-christi",name:"Fronleichnam",type:"easter-based",rule:{offset:60},regions:["BY"]},{id:"assumption-day",name:"Mariä Himmelfahrt",type:"fixed",rule:{month:8,day:15},regions:["BY"]},{id:"all-saints-day",name:"Allerheiligen",type:"fixed",rule:{month:11,day:1},regions:["BY"]}],berlin:[{id:"womens-day",name:"Internationaler Frauentag",type:"fixed",rule:{month:3,day:8},regions:["BE"]}],brandenburg:[{id:"reformation-day",name:"Reformationstag",type:"fixed",rule:{month:10,day:31},regions:["BB"]}],bremen:[{id:"reformation-day",name:"Reformationstag",type:"fixed",rule:{month:10,day:31},regions:["HB"]}],hamburg:[{id:"reformation-day",name:"Reformationstag",type:"fixed",rule:{month:10,day:31},regions:["HH"]}],hesse:[{id:"corpus-christi",name:"Fronleichnam",type:"easter-based",rule:{offset:60},regions:["HE"]}],"lower-saxony":[{id:"reformation-day",name:"Reformationstag",type:"fixed",rule:{month:10,day:31},regions:["NI"]}],"mecklenburg-vorpommern":[{id:"reformation-day",name:"Reformationstag",type:"fixed",rule:{month:10,day:31},regions:["MV"]}],"north-rhine-westphalia":[{id:"corpus-christi",name:"Fronleichnam",type:"easter-based",rule:{offset:60},regions:["NW"]},{id:"all-saints-day",name:"Allerheiligen",type:"fixed",rule:{month:11,day:1},regions:["NW"]}],"rhineland-palatinate":[{id:"corpus-christi",name:"Fronleichnam",type:"easter-based",rule:{offset:60},regions:["RP"]},{id:"all-saints-day",name:"Allerheiligen",type:"fixed",rule:{month:11,day:1},regions:["RP"]}],saarland:[{id:"corpus-christi",name:"Fronleichnam",type:"easter-based",rule:{offset:60},regions:["SL"]},{id:"assumption-day",name:"Mariä Himmelfahrt",type:"fixed",rule:{month:8,day:15},regions:["SL"]},{id:"all-saints-day",name:"Allerheiligen",type:"fixed",rule:{month:11,day:1},regions:["SL"]}],saxony:[{id:"reformation-day",name:"Reformationstag",type:"fixed",rule:{month:10,day:31},regions:["SN"]},{id:"repentance-day",name:"Buß- und Bettag",type:"custom",rule:{calculate:e=>{const t=(new Date(e,10,23).getDay()+4)%7;return new Date(e,10,23-t)}},regions:["SN"]}],"saxony-anhalt":[{id:"epiphany",name:"Heilige Drei Könige",type:"fixed",rule:{month:1,day:6},regions:["ST"]},{id:"reformation-day",name:"Reformationstag",type:"fixed",rule:{month:10,day:31},regions:["ST"]}],"schleswig-holstein":[{id:"reformation-day",name:"Reformationstag",type:"fixed",rule:{month:10,day:31},regions:["SH"]}],thuringia:[{id:"reformation-day",name:"Reformationstag",type:"fixed",rule:{month:10,day:31},regions:["TH"]}]},$t=Ft,Ut=[...Ft,...Object.values(zt).flat()],Bt=[{id:"day-of-german-unity-old",name:"Tag der deutschen Einheit (alt)",type:"fixed",rule:{month:6,day:17},active:!1},{id:"reformation-day-2017",name:"Reformationstag 2017",type:"fixed",rule:{month:10,day:31},active:!1}],Pt={name:"Deutsch (Deutschland)",code:"de-DE",months:["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],monthsShort:["Jan","Feb","Mär","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"],weekdays:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],weekdaysShort:["So","Mo","Di","Mi","Do","Fr","Sa"],weekdaysMin:["So","Mo","Di","Mi","Do","Fr","Sa"],formats:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY HH:mm",LLLL:"dddd, D. MMMM YYYY HH:mm"},ordinal:e=>e+".",meridiem:(e,t,a)=>""};var qt={name:"locale-de-DE",version:"1.0.0",size:2048,dependencies:["holiday-engine"],locale:Pt,install(e,t){We.register("de-DE",{...Pt,holidays:Ft,federalHolidays:$t,stateHolidays:zt,historicalHolidays:Bt}),e.locales=e.locales||{},e.locales["de-DE"]=Pt,e.extend({getGermanHolidays(e){if(e){const t=e.toLowerCase(),a=zt[t];if(a)return[...$t,...a]}return Ft},getFederalHolidays:()=>$t,getStateHolidays:e=>zt[e.toLowerCase()]||[],getAllHolidays:()=>Ut,getHistoricalHolidays:()=>Bt,isEasterHoliday(){const e=this.getHolidayInfo();return!!e&&"easter-based"===e.type},isCatholicHoliday(){const e=this.getHolidayInfo();return!!e&&["epiphany","corpus-christi","assumption-day","all-saints-day"].includes(e.id)},isProtestantHoliday(){const e=this.getHolidayInfo();return!!e&&["reformation-day","repentance-day"].includes(e.id)},formatGerman(e){const t=e||"dddd, D. MMMM YYYY";return this.format(t)}}),e.addStatic?.({getEasterHolidays(t){const a=Ft.filter(e=>"easter-based"===e.type),n=[];for(const r of a){const a=e.holidayEngine.calculate(r,t);n.push(...a.map(t=>({date:e(t),name:r.name,id:r.id})))}return n.sort((e,t)=>e.date.valueOf()-t.date.valueOf())},getBusBettag(t){const a=zt.saxony.find(e=>"repentance-day"===e.id);if(a){const n=e.holidayEngine.calculate(a,t);return n.length>0?e(n[0]):null}return null},getStateHolidaysForYear(t,a){const n=zt[t.toLowerCase()];if(!n)return[];const r=[];for(const t of n){const n=e.holidayEngine.calculate(t,a);r.push(...n.map(a=>({date:e(a),name:t.name,id:t.id})))}return r.sort((e,t)=>e.date.valueOf()-t.date.valueOf())},getAvailableStates:()=>Object.keys(zt)})}};const _t=[{id:"new-years-day",name:"元日",type:"fixed",rule:{month:1,day:1}},{id:"coming-of-age-day",name:"成人の日",type:"nth-weekday",rule:{month:1,weekday:1,nth:2}},{id:"national-foundation-day",name:"建国記念の日",type:"fixed",rule:{month:2,day:11}},{id:"emperors-birthday",name:"天皇誕生日",type:"fixed",rule:{month:2,day:23}},{id:"vernal-equinox-day",name:"春分の日",type:"custom",rule:{calculate:e=>ht.calculateVernalEquinox(e)}},{id:"showa-day",name:"昭和の日",type:"fixed",rule:{month:4,day:29}},{id:"constitution-day",name:"憲法記念日",type:"fixed",rule:{month:5,day:3}},{id:"greenery-day",name:"みどりの日",type:"fixed",rule:{month:5,day:4}},{id:"childrens-day",name:"こどもの日",type:"fixed",rule:{month:5,day:5}},{id:"marine-day",name:"海の日",type:"nth-weekday",rule:{month:7,weekday:1,nth:3}},{id:"mountain-day",name:"山の日",type:"fixed",rule:{month:8,day:11}},{id:"respect-for-aged-day",name:"敬老の日",type:"nth-weekday",rule:{month:9,weekday:1,nth:3}},{id:"autumnal-equinox-day",name:"秋分の日",type:"custom",rule:{calculate:e=>ht.calculateAutumnalEquinox(e)}},{id:"sports-day",name:"スポーツの日",type:"nth-weekday",rule:{month:10,weekday:1,nth:2}},{id:"culture-day",name:"文化の日",type:"fixed",rule:{month:11,day:3}},{id:"labor-thanksgiving-day",name:"勤労感謝の日",type:"fixed",rule:{month:11,day:23}},{id:"golden-week-substitute",name:"ゴールデンウィーク振替休日",type:"custom",rule:{calculate:e=>ht.calculateGoldenWeekSubstitutes(e)}}],Vt=[{id:"emperors-birthday-showa",name:"天皇誕生日（昭和）",type:"fixed",rule:{month:4,day:29},active:!1},{id:"emperors-birthday-heisei",name:"天皇誕生日（平成）",type:"fixed",rule:{month:12,day:23},active:!1},{id:"health-sports-day",name:"体育の日",type:"nth-weekday",rule:{month:10,weekday:1,nth:2},active:!1},{id:"national-holiday",name:"国民の休日",type:"fixed",rule:{month:5,day:4},active:!1}],Jt=[{id:"setsubun",name:"節分",type:"fixed",rule:{month:2,day:3}},{id:"hinamatsuri",name:"ひなまつり",type:"fixed",rule:{month:3,day:3}},{id:"cherry-blossom-day",name:"桜の日",type:"fixed",rule:{month:3,day:27}},{id:"mothers-day",name:"母の日",type:"nth-weekday",rule:{month:5,weekday:0,nth:2}},{id:"fathers-day",name:"父の日",type:"nth-weekday",rule:{month:6,weekday:0,nth:3}},{id:"tanabata",name:"七夕",type:"fixed",rule:{month:7,day:7}},{id:"obon",name:"お盆",type:"fixed",rule:{month:8,day:15},duration:3},{id:"respect-for-elderly-day",name:"敬老の日",type:"nth-weekday",rule:{month:9,weekday:1,nth:3}},{id:"shichi-go-san",name:"七五三",type:"fixed",rule:{month:11,day:15}},{id:"christmas",name:"クリスマス",type:"fixed",rule:{month:12,day:25}},{id:"new-years-eve",name:"大晦日",type:"fixed",rule:{month:12,day:31}}],Wt=_t.filter(e=>["showa-day","constitution-day","greenery-day","childrens-day","golden-week-substitute"].includes(e.id||"")),Gt=_t.filter(e=>"golden-week-substitute"!==e.id),Zt=[..._t,...Jt,...Vt],Kt=_t.filter(e=>"emperors-birthday-showa"!==e.id&&"emperors-birthday-heisei"!==e.id),Qt=[..._t.filter(e=>"emperors-birthday"!==e.id),...Vt.filter(e=>"emperors-birthday-heisei"===e.id)],Xt=[{id:"marine-day-2020",name:"海の日（2020年特別）",type:"fixed",rule:{month:7,day:23},active:!1},{id:"sports-day-2020",name:"スポーツの日（2020年特別）",type:"fixed",rule:{month:7,day:24},active:!1},{id:"mountain-day-2020",name:"山の日（2020年特別）",type:"fixed",rule:{month:8,day:10},active:!1}],ea={name:"日本語 (日本)",code:"ja-JP",months:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],monthsShort:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],weekdays:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"],weekdaysShort:["日","月","火","水","木","金","土"],weekdaysMin:["日","月","火","水","木","金","土"],formats:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY/MM/DD",LL:"YYYY年M月D日",LLL:"YYYY年M月D日 HH:mm",LLLL:"YYYY年M月D日 dddd HH:mm"},ordinal:e=>e+"日",meridiem:(e,t,a)=>12>e?"午前":"午後"};var ta={name:"locale-ja-JP",version:"1.0.0",size:2048,dependencies:["holiday-engine","holiday-custom-calculator"],locale:ea,install(e,t){We.register("ja-JP",{...ea,holidays:_t,publicHolidays:Gt,observances:Jt,historicalHolidays:Vt,goldenWeekHolidays:Wt,reiwaHolidays:Kt,heiseiHolidays:Qt}),e.locales=e.locales||{},e.locales["ja-JP"]=ea,e.extend({getJapaneseHolidays(e){switch(e){case"public":return Gt;case"observances":return Jt;case"historical":return Vt;case"golden-week":return Wt;case"reiwa":return Kt;case"heisei":return Qt;case"olympics2020":return Xt;case"all":return Zt;default:return _t}},getPublicHolidays:()=>Gt,getObservances:()=>Jt,getGoldenWeekHolidays:()=>Wt,isGoldenWeekHoliday(){return null!==this.getHolidayInfo(Wt)},isPublicHoliday(){return null!==this.getHolidayInfo(Gt)},isObservance(){return null!==this.getHolidayInfo(Jt)},isEquinoxHoliday(){const e=this.getHolidayInfo();return!!e&&["vernal-equinox-day","autumnal-equinox-day"].includes(e.id)},formatJapanese(e){const t=e||"YYYY年M月D日（ddd）";return this.format(t)},getJapaneseEra(){const e=this.year();return 2019>e?1989>e?1926>e?1912>e?1868>e?"不明":"明治":"大正":"昭和":"平成":"令和"},getJapaneseEraYear(){const e=this.year();return 2019>e?1989>e?1926>e?1912>e?1868>e?e:e-1867:e-1911:e-1925:e-1988:e-2018},formatWithEra(){return`${this.getJapaneseEra()}${this.getJapaneseEraYear()}年${this.month()}月${this.date()}日`}}),e.addStatic?.({getGoldenWeek(t){const a=[];for(const n of Wt){const r=e.holidayEngine.calculate(n,t);a.push(...r.map(t=>({date:e(t),name:n.name,id:n.id})))}return a.sort((e,t)=>e.date.valueOf()-t.date.valueOf())},getEquinoxDays(t){const a=_t.filter(e=>["vernal-equinox-day","autumnal-equinox-day"].includes(e.id||"")),n=[];for(const r of a){const a=e.holidayEngine.calculate(r,t);n.push(...a.map(t=>({date:e(t),name:r.name,id:r.id})))}return n.sort((e,t)=>e.date.valueOf()-t.date.valueOf())},getObon(t){const a=Jt.find(e=>"obon"===e.id);return a?e.holidayEngine.calculate(a,t).map(t=>e(t)):[]},isReiwaEra:e=>e>=2019,isHeiseiEra:e=>e>=1989&&2019>=e,isShowaEra:e=>e>=1926&&1989>=e,toJapaneseEra:e=>2019>e?1989>e?1926>e?1912>e?1868>e?{era:"不明",year:e}:{era:"明治",year:e-1867}:{era:"大正",year:e-1911}:{era:"昭和",year:e-1925}:{era:"平成",year:e-1988}:{era:"令和",year:e-2018},getHolidaysForEra(e){switch(e){case"reiwa":return Kt;case"heisei":return Qt;default:return _t}}})}};const aa=[{name:"Jour de l'An",type:"fixed",rule:{month:1,day:1}},{name:"Fête du Travail",type:"fixed",rule:{month:5,day:1}},{name:"Victoire 1945",type:"fixed",rule:{month:5,day:8}},{name:"Fête Nationale",type:"fixed",rule:{month:7,day:14}},{name:"Assomption",type:"fixed",rule:{month:8,day:15}},{name:"Toussaint",type:"fixed",rule:{month:11,day:1}},{name:"Armistice 1918",type:"fixed",rule:{month:11,day:11}},{name:"Noël",type:"fixed",rule:{month:12,day:25}},{name:"Lundi de Pâques",type:"easter-based",rule:{offset:1}},{name:"Ascension",type:"easter-based",rule:{offset:39}},{name:"Lundi de Pentecôte",type:"easter-based",rule:{offset:50}},{name:"Vendredi Saint",type:"easter-based",rule:{offset:-2},regions:["Alsace","Moselle"]},{name:"Saint-Étienne",type:"fixed",rule:{month:12,day:26},regions:["Alsace","Moselle"]}],na=[{name:"Saint-Valentin",type:"fixed",rule:{month:2,day:14}},{name:"Fête des Mères",type:"nth-weekday",rule:{month:5,weekday:0,nth:-1}},{name:"Fête des Pères",type:"nth-weekday",rule:{month:6,weekday:0,nth:3}},{name:"Fête de la Musique",type:"fixed",rule:{month:6,day:21}},{name:"Halloween",type:"fixed",rule:{month:10,day:31}}],ra={alsace:[{name:"Vendredi Saint",type:"easter-based",rule:{offset:-2}},{name:"Saint-Étienne",type:"fixed",rule:{month:12,day:26}}],martinique:[{name:"Abolition de l'esclavage",type:"fixed",rule:{month:5,day:22}}],guadeloupe:[{name:"Abolition de l'esclavage",type:"fixed",rule:{month:5,day:27}}],guyane:[{name:"Abolition de l'esclavage",type:"fixed",rule:{month:6,day:10}}],reunion:[{name:"Abolition de l'esclavage",type:"fixed",rule:{month:12,day:20}}]},ia=[...aa,...na],sa={name:"Français (France)",code:"fr-FR",months:["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"],monthsShort:["janv.","févr.","mars","avr.","mai","juin","juil.","août","sept.","oct.","nov.","déc."],weekdays:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"],weekdaysShort:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],weekdaysMin:["di","lu","ma","me","je","ve","sa"],formats:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},ordinal:e=>1===e?e+"er":e+"e",meridiem:(e,t,a)=>"",relativeTime:{future:"dans %s",past:"il y a %s",s:"quelques secondes",ss:"%d secondes",m:"une minute",mm:"%d minutes",h:"une heure",hh:"%d heures",d:"un jour",dd:"%d jours",M:"un mois",MM:"%d mois",y:"un an",yy:"%d ans"}};var oa={name:"locale-fr-FR",version:"1.0.0",size:1024,dependencies:["holiday-engine"],locale:sa,install(e,t){We.register("fr-FR",{...sa,holidays:aa,observances:na,regionalHolidays:ra}),e.locales=e.locales||{},e.locales["fr-FR"]=sa,e.extend({getFrenchHolidays(e){if(e){const t=e.toLowerCase(),a=ra[t];if(a)return[...aa,...a]}return aa},getFrenchObservances:()=>na,getRegionalHolidays:e=>ra[e.toLowerCase()]||[],getAllFrenchHolidays:()=>ia})}};const da=[{name:"Año Nuevo",type:"fixed",rule:{month:1,day:1}},{name:"Epifanía del Señor",type:"fixed",rule:{month:1,day:6}},{name:"Viernes Santo",type:"easter-based",rule:{offset:-2}},{name:"Fiesta del Trabajo",type:"fixed",rule:{month:5,day:1}},{name:"Asunción de la Virgen",type:"fixed",rule:{month:8,day:15}},{name:"Fiesta Nacional de España",type:"fixed",rule:{month:10,day:12}},{name:"Todos los Santos",type:"fixed",rule:{month:11,day:1}},{name:"Día de la Constitución",type:"fixed",rule:{month:12,day:6}},{name:"Inmaculada Concepción",type:"fixed",rule:{month:12,day:8}},{name:"Navidad",type:"fixed",rule:{month:12,day:25}},{name:"Jueves Santo",type:"easter-based",rule:{offset:-3},regions:["Andalucía","Aragón","Asturias","Baleares","Canarias","Cantabria","Castilla-La Mancha","Castilla y León","Extremadura","Galicia","Madrid","Murcia","Navarra","País Vasco","La Rioja"]},{name:"Lunes de Pascua",type:"easter-based",rule:{offset:1},regions:["Baleares","Cataluña","Comunidad Valenciana","Navarra","País Vasco"]}],la={andalucia:[{name:"Día de Andalucía",type:"fixed",rule:{month:2,day:28}}],aragon:[{name:"San Jorge",type:"fixed",rule:{month:4,day:23}}],asturias:[{name:"Día de Asturias",type:"fixed",rule:{month:9,day:8}}],baleares:[{name:"Día de las Islas Baleares",type:"fixed",rule:{month:3,day:1}}],canarias:[{name:"Día de Canarias",type:"fixed",rule:{month:5,day:30}}],cantabria:[{name:"Día de las Instituciones de Cantabria",type:"fixed",rule:{month:7,day:28}}],castillaLaMancha:[{name:"Día de Castilla-La Mancha",type:"fixed",rule:{month:5,day:31}}],castillaYLeon:[{name:"Día de Castilla y León",type:"fixed",rule:{month:4,day:23}}],cataluna:[{name:"Sant Jordi",type:"fixed",rule:{month:4,day:23}},{name:"Sant Joan",type:"fixed",rule:{month:6,day:24}},{name:"Diada Nacional de Catalunya",type:"fixed",rule:{month:9,day:11}},{name:"Sant Esteve",type:"fixed",rule:{month:12,day:26}}],extremadura:[{name:"Día de Extremadura",type:"fixed",rule:{month:9,day:8}}],galicia:[{name:"Día Nacional de Galicia",type:"fixed",rule:{month:7,day:25}}],madrid:[{name:"Día de la Comunidad de Madrid",type:"fixed",rule:{month:5,day:2}}],murcia:[{name:"Día de la Región de Murcia",type:"fixed",rule:{month:6,day:9}}],navarra:[{name:"San Fermín",type:"fixed",rule:{month:7,day:7}}],paisVasco:[{name:"Lunes de Pascua",type:"easter-based",rule:{offset:1}}],laRioja:[{name:"Día de La Rioja",type:"fixed",rule:{month:6,day:9}}],valencia:[{name:"San Vicente Mártir",type:"fixed",rule:{month:1,day:22}},{name:"Fallas",type:"fixed",rule:{month:3,day:19}},{name:"San Juan",type:"fixed",rule:{month:6,day:24}},{name:"Día de la Comunidad Valenciana",type:"fixed",rule:{month:10,day:9}}]},ua=[{name:"San Valentín",type:"fixed",rule:{month:2,day:14}},{name:"Día del Padre",type:"fixed",rule:{month:3,day:19}},{name:"Día de la Madre",type:"nth-weekday",rule:{month:5,weekday:0,nth:1}},{name:"Nochevieja",type:"fixed",rule:{month:12,day:31}}],ca=[...da,...ua],ha={name:"Español (España)",code:"es-ES",months:["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],monthsShort:["ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sep.","oct.","nov.","dic."],weekdays:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"],weekdaysShort:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],weekdaysMin:["do","lu","ma","mi","ju","vi","sá"],formats:{LT:"H:mm",LTS:"H:mm:ss",L:"DD/MM/YYYY",LL:"D [de] MMMM [de] YYYY",LLL:"D [de] MMMM [de] YYYY H:mm",LLLL:"dddd, D [de] MMMM [de] YYYY H:mm"},ordinal:e=>e+"º",meridiem:(e,t,a)=>{const n=12>e?"de la mañana":20>e?"de la tarde":"de la noche";return a?n:n.toUpperCase()},relativeTime:{future:"en %s",past:"hace %s",s:"unos segundos",ss:"%d segundos",m:"un minuto",mm:"%d minutos",h:"una hora",hh:"%d horas",d:"un día",dd:"%d días",M:"un mes",MM:"%d meses",y:"un año",yy:"%d años"}};var ma={name:"locale-es-ES",version:"1.0.0",size:1024,dependencies:["holiday-engine"],locale:ha,install(e,t){We.register("es-ES",{...ha,holidays:da,observances:ua,regionalHolidays:la}),e.locales=e.locales||{},e.locales["es-ES"]=ha,e.extend({getSpanishHolidays(e){if(e){const t=e.toLowerCase().replace(/\s/g,""),a=la[t];if(a)return[...da,...a]}return da},getSpanishObservances:()=>ua,getRegionalSpanishHolidays:e=>la[e.toLowerCase().replace(/\s/g,"")]||[],getAllSpanishHolidays:()=>ca})}};const ya=[{name:"Capodanno",type:"fixed",rule:{month:1,day:1}},{name:"Epifania",type:"fixed",rule:{month:1,day:6}},{name:"Festa della Liberazione",type:"fixed",rule:{month:4,day:25}},{name:"Festa del Lavoro",type:"fixed",rule:{month:5,day:1}},{name:"Festa della Repubblica",type:"fixed",rule:{month:6,day:2}},{name:"Assunzione di Maria",type:"fixed",rule:{month:8,day:15}},{name:"Ognissanti",type:"fixed",rule:{month:11,day:1}},{name:"Immacolata Concezione",type:"fixed",rule:{month:12,day:8}},{name:"Natale",type:"fixed",rule:{month:12,day:25}},{name:"Santo Stefano",type:"fixed",rule:{month:12,day:26}},{name:"Pasquetta",type:"easter-based",rule:{offset:1}}],fa={sicilia:[{name:"Santa Lucia",type:"fixed",rule:{month:12,day:13}}],sardegna:[{name:"Sagra di Sant'Efisio",type:"fixed",rule:{month:5,day:1}}],veneto:[{name:"San Marco",type:"fixed",rule:{month:4,day:25}}],toscana:[{name:"San Giovanni Battista",type:"fixed",rule:{month:6,day:24}}],lazio:[{name:"Santi Pietro e Paolo",type:"fixed",rule:{month:6,day:29}}],lombardia:[{name:"Sant'Ambrogio",type:"fixed",rule:{month:12,day:7}}]},pa=[{name:"San Valentino",type:"fixed",rule:{month:2,day:14}},{name:"Festa della Donna",type:"fixed",rule:{month:3,day:8}},{name:"Festa della Mamma",type:"nth-weekday",rule:{month:5,weekday:0,nth:2}},{name:"Festa del Papà",type:"fixed",rule:{month:3,day:19}},{name:"Vigilia di Natale",type:"fixed",rule:{month:12,day:24}},{name:"Capodanno",type:"fixed",rule:{month:12,day:31}}],ga=[...ya,...pa],wa={name:"Italiano (Italia)",code:"it-IT",months:["gennaio","febbraio","marzo","aprile","maggio","giugno","luglio","agosto","settembre","ottobre","novembre","dicembre"],monthsShort:["gen.","feb.","mar.","apr.","mag.","giu.","lug.","ago.","set.","ott.","nov.","dic."],weekdays:["domenica","lunedì","martedì","mercoledì","giovedì","venerdì","sabato"],weekdaysShort:["dom.","lun.","mar.","mer.","gio.","ven.","sab."],weekdaysMin:["do","lu","ma","me","gi","ve","sa"],formats:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},ordinal:e=>e+"º",meridiem:(e,t,a)=>{const n=12>e?"del mattino":18>e?"del pomeriggio":"della sera";return a?n:n.toUpperCase()},relativeTime:{future:"tra %s",past:"%s fa",s:"alcuni secondi",ss:"%d secondi",m:"un minuto",mm:"%d minuti",h:"un'ora",hh:"%d ore",d:"un giorno",dd:"%d giorni",M:"un mese",MM:"%d mesi",y:"un anno",yy:"%d anni"}};var ba={name:"locale-it-IT",version:"1.0.0",size:1024,dependencies:["holiday-engine"],locale:wa,install(e,t){We.register("it-IT",{...wa,holidays:ya,observances:pa,regionalHolidays:fa}),e.locales=e.locales||{},e.locales["it-IT"]=wa,e.extend({getItalianHolidays(e){if(e){const t=e.toLowerCase(),a=fa[t];if(a)return[...ya,...a]}return ya},getItalianObservances:()=>pa,getRegionalItalianHolidays:e=>fa[e.toLowerCase()]||[],getAllItalianHolidays:()=>ga})}};const Ma=[{name:"Confraternização Universal",type:"fixed",rule:{month:1,day:1}},{name:"Tiradentes",type:"fixed",rule:{month:4,day:21}},{name:"Dia do Trabalhador",type:"fixed",rule:{month:5,day:1}},{name:"Independência do Brasil",type:"fixed",rule:{month:9,day:7}},{name:"Nossa Senhora Aparecida",type:"fixed",rule:{month:10,day:12}},{name:"Finados",type:"fixed",rule:{month:11,day:2}},{name:"Proclamação da República",type:"fixed",rule:{month:11,day:15}},{name:"Natal",type:"fixed",rule:{month:12,day:25}},{name:"Carnaval",type:"easter-based",rule:{offset:-47}},{name:"Sexta-feira Santa",type:"easter-based",rule:{offset:-2}},{name:"Corpus Christi",type:"easter-based",rule:{offset:60}}],Da={acre:[{name:"Dia da Amazônia",type:"fixed",rule:{month:9,day:5}},{name:"Tratado de Petrópolis",type:"fixed",rule:{month:11,day:17}}],alagoas:[{name:"São João",type:"fixed",rule:{month:6,day:24}},{name:"São Pedro",type:"fixed",rule:{month:6,day:29}}],bahia:[{name:"Independência da Bahia",type:"fixed",rule:{month:7,day:2}}],ceara:[{name:"Abolição da Escravidão no Ceará",type:"fixed",rule:{month:3,day:25}}],df:[{name:"Fundação de Brasília",type:"fixed",rule:{month:4,day:21}},{name:"Dia da Consciência Negra",type:"fixed",rule:{month:11,day:20}}],rj:[{name:"Morte de Zumbi dos Palmares",type:"fixed",rule:{month:4,day:23}},{name:"São Jorge",type:"fixed",rule:{month:4,day:23}}],sp:[{name:"Revolução Constitucionalista",type:"fixed",rule:{month:7,day:9}},{name:"Dia da Consciência Negra",type:"fixed",rule:{month:11,day:20}}]},xa=[{name:"Dia dos Namorados",type:"fixed",rule:{month:6,day:12}},{name:"Dia das Mães",type:"nth-weekday",rule:{month:5,weekday:0,nth:2}},{name:"Dia dos Pais",type:"nth-weekday",rule:{month:8,weekday:0,nth:2}},{name:"Dia das Crianças",type:"fixed",rule:{month:10,day:12}},{name:"Dia do Professor",type:"fixed",rule:{month:10,day:15}},{name:"Véspera de Natal",type:"fixed",rule:{month:12,day:24}},{name:"Véspera de Ano Novo",type:"fixed",rule:{month:12,day:31}}],va=[...Ma,...xa],ka={name:"Português (Brasil)",code:"pt-BR",months:["janeiro","fevereiro","março","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro"],monthsShort:["jan.","fev.","mar.","abr.","mai.","jun.","jul.","ago.","set.","out.","nov.","dez."],weekdays:["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"],weekdaysShort:["dom.","seg.","ter.","qua.","qui.","sex.","sáb."],weekdaysMin:["do","sg","te","qa","qi","sx","sá"],formats:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D [de] MMMM [de] YYYY",LLL:"D [de] MMMM [de] YYYY [às] HH:mm",LLLL:"dddd, D [de] MMMM [de] YYYY [às] HH:mm"},ordinal:e=>e+"º",meridiem:(e,t,a)=>{const n=12>e?"da manhã":18>e?"da tarde":"da noite";return a?n:n.toUpperCase()},relativeTime:{future:"em %s",past:"há %s",s:"poucos segundos",ss:"%d segundos",m:"um minuto",mm:"%d minutos",h:"uma hora",hh:"%d horas",d:"um dia",dd:"%d dias",M:"um mês",MM:"%d meses",y:"um ano",yy:"%d anos"}};var Sa={name:"locale-pt-BR",version:"1.0.0",size:1024,dependencies:["holiday-engine"],locale:ka,install(e,t){We.register("pt-BR",{...ka,holidays:Ma,observances:xa,regionalHolidays:Da}),e.locales=e.locales||{},e.locales["pt-BR"]=ka,e.extend({getBrazilianHolidays(e){if(e){const t=e.toLowerCase(),a=Da[t];if(a)return[...Ma,...a]}return Ma},getBrazilianObservances:()=>xa,getRegionalBrazilianHolidays:e=>Da[e.toLowerCase()]||[],getAllBrazilianHolidays:()=>va})}};const Ya=[{name:"Новый год",type:"fixed",rule:{month:1,day:1}},{name:"Рождество Христово",type:"fixed",rule:{month:1,day:7}},{name:"День защитника Отечества",type:"fixed",rule:{month:2,day:23}},{name:"Международный женский день",type:"fixed",rule:{month:3,day:8}},{name:"Праздник Весны и Труда",type:"fixed",rule:{month:5,day:1}},{name:"День Победы",type:"fixed",rule:{month:5,day:9}},{name:"День России",type:"fixed",rule:{month:6,day:12}},{name:"День народного единства",type:"fixed",rule:{month:11,day:4}},{name:"Новогодние каникулы",type:"fixed",rule:{month:1,day:2}},{name:"Новогодние каникулы",type:"fixed",rule:{month:1,day:3}},{name:"Новогодние каникулы",type:"fixed",rule:{month:1,day:4}},{name:"Новогодние каникулы",type:"fixed",rule:{month:1,day:5}},{name:"Новогодние каникулы",type:"fixed",rule:{month:1,day:6}},{name:"Новогодние каникулы",type:"fixed",rule:{month:1,day:8}},{name:"Православная Пасха",type:"easter-based",rule:{offset:0}}],Ea={tatarstan:[{name:"День Республики Татарстан",type:"fixed",rule:{month:8,day:30}}],bashkortostan:[{name:"День Республики Башкортостан",type:"fixed",rule:{month:10,day:11}}],sakha:[{name:"День Республики Саха (Якутия)",type:"fixed",rule:{month:4,day:27}}],chechnya:[{name:"День мира в Чеченской Республике",type:"fixed",rule:{month:4,day:16}}],dagestan:[{name:"День единения народов Дагестана",type:"fixed",rule:{month:9,day:15}}]},La=[{name:"День святого Валентина",type:"fixed",rule:{month:2,day:14}},{name:"Масленица",type:"easter-based",rule:{offset:-49}},{name:"День космонавтики",type:"fixed",rule:{month:4,day:12}},{name:"Радоница",type:"easter-based",rule:{offset:9}},{name:"День Победы (вечером)",type:"fixed",rule:{month:5,day:9}},{name:"День знаний",type:"fixed",rule:{month:9,day:1}},{name:"День учителя",type:"fixed",rule:{month:10,day:5}},{name:"День матери",type:"nth-weekday",rule:{month:11,weekday:0,nth:-1}},{name:"День Конституции Российской Федерации",type:"fixed",rule:{month:12,day:12}}],Ra=[...Ya,...La],Ha={name:"Русский (Россия)",code:"ru-RU",months:["январь","февраль","март","апрель","май","июнь","июль","август","сентябрь","октябрь","ноябрь","декабрь"],monthsShort:["янв.","фев.","мар.","апр.","май","июн.","июл.","авг.","сен.","окт.","ноя.","дек."],weekdays:["воскресенье","понедельник","вторник","среда","четверг","пятница","суббота"],weekdaysShort:["вс.","пн.","вт.","ср.","чт.","пт.","сб."],weekdaysMin:["вс","пн","вт","ср","чт","пт","сб"],formats:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY [г.]",LLL:"D MMMM YYYY [г.], H:mm",LLLL:"dddd, D MMMM YYYY [г.], H:mm"},ordinal:e=>e+"-й",meridiem:(e,t,a)=>4>e?"ночи":12>e?"утра":17>e?"дня":"вечера",relativeTime:{future:"через %s",past:"%s назад",s:"несколько секунд",ss:e=>e%10==1&&e%100!=11?e+" секунду":[2,3,4].includes(e%10)&&![12,13,14].includes(e%100)?e+" секунды":e+" секунд",m:"минуту",mm:e=>e%10==1&&e%100!=11?e+" минуту":[2,3,4].includes(e%10)&&![12,13,14].includes(e%100)?e+" минуты":e+" минут",h:"час",hh:e=>e%10==1&&e%100!=11?e+" час":[2,3,4].includes(e%10)&&![12,13,14].includes(e%100)?e+" часа":e+" часов",d:"день",dd:e=>e%10==1&&e%100!=11?e+" день":[2,3,4].includes(e%10)&&![12,13,14].includes(e%100)?e+" дня":e+" дней",M:"месяц",MM:e=>e%10==1&&e%100!=11?e+" месяц":[2,3,4].includes(e%10)&&![12,13,14].includes(e%100)?e+" месяца":e+" месяцев",y:"год",yy:e=>e%10==1&&e%100!=11?e+" год":[2,3,4].includes(e%10)&&![12,13,14].includes(e%100)?e+" года":e+" лет"}};var Ia={name:"locale-ru-RU",version:"1.0.0",size:1024,dependencies:["holiday-engine"],locale:Ha,install(e,t){We.register("ru-RU",{...Ha,holidays:Ya,observances:La,regionalHolidays:Ea}),e.locales=e.locales||{},e.locales["ru-RU"]=Ha,e.extend({getRussianHolidays(e){if(e){const t=e.toLowerCase(),a=Ea[t];if(a)return[...Ya,...a]}return Ya},getRussianObservances:()=>La,getRegionalRussianHolidays:e=>Ea[e.toLowerCase()]||[],getAllRussianHolidays:()=>Ra})}};const Na=[{name:"元旦",type:"fixed",rule:{month:1,day:1}},{name:"劳动节",type:"fixed",rule:{month:5,day:1}},{name:"国庆节",type:"fixed",rule:{month:10,day:1}},{name:"国庆黄金周",type:"fixed",rule:{month:10,day:2}},{name:"国庆黄金周",type:"fixed",rule:{month:10,day:3}},{name:"春节",type:"lunar",rule:{calendar:"chinese",month:1,day:1}},{name:"春节假期",type:"lunar",rule:{calendar:"chinese",month:1,day:2}},{name:"春节假期",type:"lunar",rule:{calendar:"chinese",month:1,day:3}},{name:"清明节",type:"fixed",rule:{month:4,day:5}},{name:"端午节",type:"lunar",rule:{calendar:"chinese",month:5,day:5}},{name:"中秋节",type:"lunar",rule:{calendar:"chinese",month:8,day:15}}],Ta={xinjiang:[{name:"古尔邦节",type:"custom",rule:{calculate:e=>[new Date(e,8,10)]}}],tibet:[{name:"藏历新年",type:"custom",rule:{calculate:e=>[new Date(e,1,10)]}}],guangxi:[{name:"三月三",type:"lunar",rule:{month:3,day:3}}],hongkong:[{name:"佛诞节",type:"lunar",rule:{month:4,day:8}}],macau:[{name:"澳门特别行政区成立纪念日",type:"fixed",rule:{month:12,day:20}}]},Aa=[{name:"情人节",type:"fixed",rule:{month:2,day:14}},{name:"妇女节",type:"fixed",rule:{month:3,day:8}},{name:"植树节",type:"fixed",rule:{month:3,day:12}},{name:"愚人节",type:"fixed",rule:{month:4,day:1}},{name:"青年节",type:"fixed",rule:{month:5,day:4}},{name:"母亲节",type:"nth-weekday",rule:{month:5,weekday:0,nth:2}},{name:"儿童节",type:"fixed",rule:{month:6,day:1}},{name:"父亲节",type:"nth-weekday",rule:{month:6,weekday:0,nth:3}},{name:"建党节",type:"fixed",rule:{month:7,day:1}},{name:"建军节",type:"fixed",rule:{month:8,day:1}},{name:"教师节",type:"fixed",rule:{month:9,day:10}},{name:"重阳节",type:"lunar",rule:{calendar:"chinese",month:9,day:9}},{name:"万圣节",type:"fixed",rule:{month:10,day:31}},{name:"光棍节",type:"fixed",rule:{month:11,day:11}},{name:"圣诞节",type:"fixed",rule:{month:12,day:25}}],ja=[...Na,...Aa],Oa={name:"中文 (简体，中国)",code:"zh-CN",months:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],monthsShort:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],weekdays:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"],weekdaysShort:["周日","周一","周二","周三","周四","周五","周六"],weekdaysMin:["日","一","二","三","四","五","六"],formats:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY/MM/DD",LL:"YYYY年M月D日",LLL:"YYYY年M月D日 HH:mm",LLLL:"dddd YYYY年M月D日 HH:mm"},ordinal:e=>"第"+e,meridiem:(e,t,a)=>6>e?"凌晨":9>e?"早上":12>e?"上午":13>e?"中午":18>e?"下午":"晚上",relativeTime:{future:"%s后",past:"%s前",s:"几秒",ss:"%d秒",m:"1分钟",mm:"%d分钟",h:"1小时",hh:"%d小时",d:"1天",dd:"%d天",M:"1个月",MM:"%d个月",y:"1年",yy:"%d年"}};var Ca={name:"locale-zh-CN",version:"1.0.0",size:1024,dependencies:["holiday-engine"],locale:Oa,install(e,t){We.register("zh-CN",{...Oa,holidays:Na,observances:Aa,regionalHolidays:Ta}),e.locales=e.locales||{},e.locales["zh-CN"]=Oa,e.extend({getChineseHolidays(e){if(e){const t=e.toLowerCase(),a=Ta[t];if(a)return[...Na,...a]}return Na},getChineseObservances:()=>Aa,getRegionalChineseHolidays:e=>Ta[e.toLowerCase()]||[],getAllChineseHolidays:()=>ja})}};const Fa={name:"DateComponents",description:"Validation schema for date components",version:"1.0.0",strict:!1,sanitize:!0,transform:!0,stopOnFirstError:!1,rules:{year:{name:"year",required:!0,type:"number",min:1e3,max:9999,message:"Year must be between 1000 and 9999",custom:(e,t)=>!t.strict||e>=1900||"Years before 1900 are not supported in strict mode"},month:{name:"month",required:!0,type:"number",min:1,max:12,message:"Month must be between 1 and 12"},day:{name:"day",required:!0,type:"number",min:1,max:31,message:"Day must be between 1 and 31",custom:(e,t)=>{if(t.partial)return!0;const{year:a,month:n}=t;if(a&&n){const t=new Date(a,n,0).getDate();if(e>t)return`${2===n?"February":"Month "+n} in ${a} has only ${t} days`}return!0}},hour:{name:"hour",required:!1,type:"number",min:0,max:23,message:"Hour must be between 0 and 23",transform:e=>Math.floor(e)},minute:{name:"minute",required:!1,type:"number",min:0,max:59,message:"Minute must be between 0 and 59",transform:e=>Math.floor(e)},second:{name:"second",required:!1,type:"number",min:0,max:59,message:"Second must be between 0 and 59",transform:e=>Math.floor(e)},millisecond:{name:"millisecond",required:!1,type:"number",min:0,max:999,message:"Millisecond must be between 0 and 999",transform:e=>Math.floor(e)}}},za={name:"HolidayRule",description:"Validation schema for holiday rules",version:"1.0.0",strict:!0,sanitize:!1,transform:!1,stopOnFirstError:!1,rules:{name:{name:"name",required:!0,type:"string",minLength:1,maxLength:100,pattern:/^[a-zA-Z0-9\s\-_]+$/,message:"Holiday name must be 1-100 characters and contain only letters, numbers, spaces, hyphens, and underscores",sanitize:!0},type:{name:"type",required:!0,type:"string",enum:["fixed","nth-weekday","relative","lunar","easter-based","custom"],message:"Holiday type must be one of: fixed, nth-weekday, relative, lunar, easter-based, custom"},active:{name:"active",required:!1,type:"boolean",transform:e=>!!e}},customValidators:{validateHolidayRule:e=>{if(!e.rule||"object"!=typeof e.rule)return"Holiday rule must have a rule property";switch(e.type){case"fixed":if(!e.rule.month||!e.rule.day)return"Fixed holiday must have month and day";break;case"nth-weekday":if(!e.rule.month||!e.rule.weekday||!e.rule.nth)return"Nth-weekday holiday must have month, weekday, and nth"}return!0}}};class $a{constructor(){this.schemas=new Map,this.cache=new Map,this.performanceMetrics={validations:0,totalDuration:0,cacheHits:0,cacheMisses:0},this.registerSchema(Fa),this.registerSchema(za)}registerSchema(e){this.schemas.set(e.name,e),this.clearCache()}validate(e,t,a={}){const n=performance.now(),r=this.generateCacheKey(e,t,a),i=this.cache.get(r);if(i)return this.performanceMetrics.cacheHits++,i;this.performanceMetrics.cacheMisses++;const s=this.schemas.get(e);if(!s)throw _e.createConfigurationError(e,`Validation schema '${e}' not found`);const o={operation:"validate",strict:s.strict||!1,sanitize:s.sanitize||!1,transform:s.transform||!1,stopOnFirstError:s.stopOnFirstError||!1,...a},d=this.performValidation(s,t,o),l=performance.now();return d.performance.duration=l-n,this.performanceMetrics.validations++,this.performanceMetrics.totalDuration+=d.performance.duration,this.cache.set(r,d),d}performValidation(e,t,a){const n=[];let r=!1,i=!1,s=0,o=0;const d={...t};for(const[t,l]of Object.entries(e.rules)){s++;const u=d[t],c=a.path?`${a.path}.${t}`:t;try{if(l.required&&(null==u||""===u)){if(n.push({field:t,value:u,rule:"required",message:l.message||t+" is required",code:"REQUIRED_FIELD",severity:"error",path:c,context:a}),e.stopOnFirstError)break;continue}if(!l.required&&(null==u||""===u)){o++;continue}if(!this.validateType(u,l.type)){if(n.push({field:t,value:u,rule:"type",message:`${t} must be of type ${l.type}`,code:"INVALID_TYPE",severity:"error",path:c,context:a}),e.stopOnFirstError)break;continue}if("number"===l.type&&(void 0!==l.min&&u<l.min&&n.push({field:t,value:u,rule:"min",message:l.message||`${t} must be at least ${l.min}`,code:"MIN_VALUE",severity:"error",path:c,context:a}),void 0!==l.max&&u>l.max&&n.push({field:t,value:u,rule:"max",message:l.message||`${t} must be at most ${l.max}`,code:"MAX_VALUE",severity:"error",path:c,context:a})),"string"===l.type&&(void 0!==l.minLength&&u.length<l.minLength&&n.push({field:t,value:u,rule:"minLength",message:l.message||`${t} must be at least ${l.minLength} characters`,code:"MIN_LENGTH",severity:"error",path:c,context:a}),void 0!==l.maxLength&&u.length>l.maxLength&&n.push({field:t,value:u,rule:"maxLength",message:l.message||`${t} must be at most ${l.maxLength} characters`,code:"MAX_LENGTH",severity:"error",path:c,context:a}),l.pattern&&!l.pattern.test(u)&&n.push({field:t,value:u,rule:"pattern",message:l.message||t+" format is invalid",code:"INVALID_PATTERN",severity:"error",path:c,context:a}),l.sanitize&&(d[t]=this.sanitizeString(u),r=!0)),l.enum&&!l.enum.includes(u)&&n.push({field:t,value:u,rule:"enum",message:l.message||`${t} must be one of: ${l.enum.join(", ")}`,code:"INVALID_ENUM",severity:"error",path:c,context:a}),l.custom){const e=l.custom(u,{...a,path:c});if(!0!==e){const r="string"==typeof e?e:l.message||t+" is invalid";n.push({field:t,value:u,rule:"custom",message:r,code:"CUSTOM_VALIDATION",severity:"error",path:c,context:a})}}l.transform&&void 0!==u&&(d[t]=l.transform(u),i=!0)}catch(e){n.push({field:t,value:u,rule:"system",message:"Validation error: "+(e instanceof Error?e.message:"Unknown error"),code:"SYSTEM_ERROR",severity:"error",path:c,context:a})}}if(e.customValidators)for(const[r,i]of Object.entries(e.customValidators))try{const e=i(t,a);!0!==e&&n.push({field:"root",value:t,rule:r,message:"string"==typeof e?e:"Custom validation failed",code:"CUSTOM_VALIDATOR",severity:"error",path:a.path||"root",context:a})}catch(e){n.push({field:"root",value:t,rule:r,message:"Custom validator error: "+(e instanceof Error?e.message:"Unknown error"),code:"CUSTOM_VALIDATOR_ERROR",severity:"error",path:a.path||"root",context:a})}const l=0===n.length;return{valid:l,data:l?d:void 0,errors:n,warnings:[],context:a,sanitized:r,transformed:i,performance:{duration:0,rulesChecked:s,rulesSkipped:o}}}validateType(e,t){switch(t){case"string":return"string"==typeof e;case"number":return"number"==typeof e&&!isNaN(e)&&isFinite(e);case"boolean":return"boolean"==typeof e;case"date":return e instanceof Date&&!isNaN(e.getTime());case"object":return"object"==typeof e&&null!==e&&!Array.isArray(e);case"array":return Array.isArray(e);case"function":return"function"==typeof e;default:return!0}}sanitizeString(e){return e.trim().replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,"").replace(/<[^>]*>/g,"").replace(/[<>]/g,"")}generateCacheKey(e,t,a){return`${e}:${JSON.stringify(t)}:${JSON.stringify(a)}`}clearCache(){this.cache.clear()}getPerformanceMetrics(){return{...this.performanceMetrics,averageDuration:this.performanceMetrics.validations>0?this.performanceMetrics.totalDuration/this.performanceMetrics.validations:0,cacheHitRate:this.performanceMetrics.cacheHits+this.performanceMetrics.cacheMisses>0?this.performanceMetrics.cacheHits/(this.performanceMetrics.cacheHits+this.performanceMetrics.cacheMisses):0}}resetPerformanceMetrics(){this.performanceMetrics={validations:0,totalDuration:0,cacheHits:0,cacheMisses:0}}}const Ua=new $a;function Ba(e,t){return Ua.validate("DateComponents",e,t)}function Pa(e,t){return Ua.validate("HolidayRule",e,t)}function qa(e){const t=new $a;return t.registerSchema(e),(a,n)=>t.validate(e.name,a,n)}class _a{constructor(){this.recoveryConfigs=new Map,this.errorHistory=[],this.maxHistorySize=1e3,this.monitoringEnabled=!0,this.errorMetrics=this.initializeMetrics(),this.setupDefaultRecoveryConfigs()}initializeMetrics(){return{totalErrors:0,errorsByType:{},errorsByComponent:{},errorsBySeverity:{low:0,medium:0,high:0,critical:0},recoveryAttempts:0,successfulRecoveries:0,failedRecoveries:0,averageRecoveryTime:0,lastError:new Date,criticalErrors:0}}setupDefaultRecoveryConfigs(){this.setRecoveryConfig("date_parsing",{maxAttempts:3,baseDelay:100,maxDelay:1e3,backoffMultiplier:2,jitter:!0,retryableErrors:["PARSING_ERROR","INVALID_DATE"],fallbackValue:new Date,fallbackFunction:()=>new Date}),this.setRecoveryConfig("validation",{maxAttempts:1,baseDelay:0,maxDelay:0,backoffMultiplier:1,jitter:!1,retryableErrors:["VALIDATION_ERROR"],fallbackFunction:()=>null,sanitizeFunction:e=>"string"==typeof e?e.trim().replace(/[<>]/g,""):e}),this.setRecoveryConfig("holiday_calculation",{maxAttempts:2,baseDelay:50,maxDelay:500,backoffMultiplier:1.5,jitter:!0,retryableErrors:["CALCULATION_ERROR","INVALID_HOLIDAY_RULE"],fallbackValue:null,fallbackFunction:()=>null}),this.setRecoveryConfig("plugin",{maxAttempts:1,baseDelay:0,maxDelay:0,backoffMultiplier:1,jitter:!1,retryableErrors:[],fallbackValue:null,fallbackFunction:(e,t)=>null}),this.setRecoveryConfig("critical",{maxAttempts:0,baseDelay:0,maxDelay:0,backoffMultiplier:1,jitter:!1,retryableErrors:[],fallbackValue:null,fallbackFunction:()=>null})}setRecoveryConfig(e,t){this.recoveryConfigs.set(e,t)}getRecoveryConfig(e){let t="unknown";return e instanceof Oe?t=e.type.toLowerCase():"TypeError"===e.name?t="type_error":"RangeError"===e.name?t="range_error":"ReferenceError"===e.name&&(t="reference_error"),this.recoveryConfigs.get(t)||this.recoveryConfigs.get("unknown")||{maxAttempts:0,baseDelay:0,maxDelay:0,backoffMultiplier:1,jitter:!1,retryableErrors:[],fallbackFunction:()=>null,fallbackValue:null}}async handleError(e,t,a){const n=performance.now();this.updateErrorMetrics(e,t);const r=this.determineErrorSeverity(e,t);this.logError(e,t,r);const i=this.getRecoveryConfig(e);if(0===i.maxAttempts)return{recovered:!1,strategy:"abort",error:e,attempts:0,duration:performance.now()-n};let s=e,o="retry";for(let r=1;r<=i.maxAttempts;r++){this.errorMetrics.recoveryAttempts++;try{const d=this.calculateDelay(r,i);let l;if(d>0&&await this.sleep(d),(i.retryableErrors.includes(e.name)||i.retryableErrors.some(t=>e.message.includes(t)))&&a&&(l=await a(),o="retry"),void 0===l&&i.sanitizeFunction&&void 0!==t.input&&(i.sanitizeFunction(t.input),a&&(l=await a()),o="sanitize"),void 0===l&&i.transformFunction&&void 0!==t.input&&(i.transformFunction(t.input),a&&(l=await a()),o="transform"),void 0===l&&i.fallbackFunction&&(l=i.fallbackFunction(s,t),o="fallback"),void 0===l&&void 0!==i.fallbackValue&&(l=i.fallbackValue,o="fallback"),void 0===l&&i.delegateFunction&&(l=await i.delegateFunction(s,t),o="delegate"),void 0!==l)return this.errorMetrics.successfulRecoveries++,{recovered:!0,strategy:o,result:l,attempts:r,duration:performance.now()-n,fallbackUsed:"fallback"===o||"delegate"===o}}catch(e){s=e instanceof Error?e:Error(e+"")}}this.errorMetrics.failedRecoveries++;const d=performance.now()-n;return{recovered:!1,strategy:o||"abort",error:s,attempts:i.maxAttempts,duration:d}}calculateDelay(e,t){let a=t.baseDelay*Math.pow(t.backoffMultiplier,e-1);return a=Math.min(a,t.maxDelay),t.jitter&&(a*=.75+.5*Math.random()),Math.floor(a)}sleep(e){return new Promise(t=>setTimeout(t,e))}determineErrorSeverity(e,t){return e.message.includes("out of memory")||e.message.includes("stack overflow")||"RangeError"===e.name&&e.message.includes("Maximum call stack")?"critical":e instanceof Oe&&"CONFIGURATION_ERROR"===e.type||"core"===t.component||"TypeError"===e.name&&e.message.includes("Cannot read property")?"high":e instanceof Oe&&["PARSING_ERROR","VALIDATION_ERROR","PLUGIN_ERROR"].includes(e.type)?"medium":"low"}updateErrorMetrics(e,t){this.errorMetrics.totalErrors++,this.errorMetrics.lastError=new Date;const a=e instanceof Oe?e.type:e.name;this.errorMetrics.errorsByType[a]=(this.errorMetrics.errorsByType[a]||0)+1,this.errorMetrics.errorsByComponent[t.component]=(this.errorMetrics.errorsByComponent[t.component]||0)+1;const n=this.determineErrorSeverity(e,t);this.errorMetrics.errorsBySeverity[n]++,"critical"===n&&this.errorMetrics.criticalErrors++,this.addToHistory(e,t)}addToHistory(e,t){this.errorHistory.push({error:e,context:t}),this.errorHistory.length>this.maxHistorySize&&(this.errorHistory=this.errorHistory.slice(-this.maxHistorySize))}logError(e,t,a){this.monitoringEnabled&&(a.toUpperCase(),t.component,t.operation,e.message)}getErrorMetrics(){return{...this.errorMetrics}}getErrorHistory(e){return e?this.errorHistory.slice(-e):[...this.errorHistory]}clearHistory(){this.errorHistory=[],this.errorMetrics=this.initializeMetrics()}setMonitoringEnabled(e){this.monitoringEnabled=e}setMaxHistorySize(e){this.maxHistorySize=e,this.errorHistory.length>e&&(this.errorHistory=this.errorHistory.slice(-e))}getRecoverySuggestions(e,t){const a=[],n=this.getRecoveryConfig(e);if(e instanceof Oe)switch(e.type){case"INVALID_DATE":a.push("Check if the date format is correct"),a.push("Verify the date string is not empty"),a.push("Consider using a different date format");break;case"PARSING_ERROR":a.push("Verify the input format matches the expected pattern"),a.push("Check for special characters in the input"),a.push("Try a more lenient parsing approach");break;case"VALIDATION_ERROR":a.push("Review the validation rules"),a.push("Check if all required fields are provided"),a.push("Verify field values are within allowed ranges");break;case"INVALID_TIMEZONE":a.push("Verify the timezone identifier is valid"),a.push("Use standard IANA timezone names");break;case"PLUGIN_ERROR":a.push("Check if the plugin is properly loaded"),a.push("Verify plugin configuration"),a.push("Try reloading the plugin")}return"parser"===t.component&&(a.push("Consider using a different parsing strategy"),a.push("Check if locale settings are correct")),"validator"===t.component&&(a.push("Review validation schema"),a.push("Consider enabling sanitization")),n.maxAttempts>0&&a.push(`System will attempt up to ${n.maxAttempts} recovery attempts`),void 0===n.fallbackFunction&&void 0===n.fallbackValue||a.push("Fallback behavior is configured for this error type"),a}}const Va=new _a;async function Ja(e,t,a){return Va.handleError(e,t,a)}class Wa{constructor(e){this.errorHandler=e?.errorHandler||Va,this.fallbackComponent=e?.fallbackComponent}async execute(e,t){try{return await e()}catch(a){const n=a instanceof Error?a:Error(a+""),r=await this.errorHandler.handleError(n,t,e);if(r.recovered&&void 0!==r.result)return r.result;if(this.fallbackComponent)return this.fallbackComponent(n,t);throw n}}}class Ga{constructor(e){this.alertCallbacks=[],this.errorHandler=e?.errorHandler||Va,this.alertThresholds={errorRate:e?.alertThresholds?.errorRate||.1,criticalErrors:e?.alertThresholds?.criticalErrors||5,recoveryFailureRate:e?.alertThresholds?.recoveryFailureRate||.5}}checkAlerts(){const e=this.errorHandler.getErrorMetrics(),t=[],a=e.totalErrors+e.successfulRecoveries;if(a>0){const n=e.totalErrors/a;n>this.alertThresholds.errorRate&&t.push({type:"error_rate",severity:"high",message:`Error rate (${(100*n).toFixed(2)}%) exceeds threshold (${(100*this.alertThresholds.errorRate).toFixed(2)}%)`,metrics:e,timestamp:new Date})}e.criticalErrors>this.alertThresholds.criticalErrors&&t.push({type:"critical_errors",severity:"critical",message:`Critical errors (${e.criticalErrors}) exceed threshold (${this.alertThresholds.criticalErrors})`,metrics:e,timestamp:new Date});const n=e.successfulRecoveries+e.failedRecoveries;if(n>0){const a=e.failedRecoveries/n;a>this.alertThresholds.recoveryFailureRate&&t.push({type:"recovery_failure",severity:"medium",message:`Recovery failure rate (${(100*a).toFixed(2)}%) exceeds threshold (${(100*this.alertThresholds.recoveryFailureRate).toFixed(2)}%)`,metrics:e,timestamp:new Date})}return t.forEach(e=>{this.alertCallbacks.forEach(t=>{try{t(e)}catch(e){}})}),t}addAlertCallback(e){this.alertCallbacks.push(e)}removeAlertCallback(e){const t=this.alertCallbacks.indexOf(e);t>-1&&this.alertCallbacks.splice(t,1)}}const Za=new Ga;class Ka{constructor(e){this.boundaries=new Map,this.validator=Ua,this.errorHandler=Va,this.config=this.mergeConfig(e),this.setupErrorHandling()}mergeConfig(e){return{validation:{strict:!1,sanitize:!0,transform:!0,stopOnFirstError:!1,cacheResults:!0,...e?.validation},handling:{enableRecovery:!0,maxRecoveryAttempts:3,enableMonitoring:!0,enableAlerts:!0,...e?.handling},reporting:{logLevel:"warn",includeStackTrace:!0,includeContext:!0,maxHistorySize:1e3,...e?.reporting}}}setupErrorHandling(){this.errorHandler.setMonitoringEnabled(this.config.handling.enableMonitoring),this.errorHandler.setMaxHistorySize(this.config.reporting.maxHistorySize)}async execute(e){const t=performance.now(),a={operation:e.name,component:e.component,steps:[]},n={success:!1,performance:{validationTime:0,handlingTime:0,totalTime:0},context:a};try{if(a.steps.push("started"),!e.skipValidation&&e.schema){const r=performance.now();a.steps.push("validation");const i={operation:e.name,path:e.component,strict:this.config.validation.strict,sanitize:this.config.validation.sanitize,transform:this.config.validation.transform,stopOnFirstError:this.config.validation.stopOnFirstError,...e.validation};if(n.validation=this.validator.validate(e.schema,e.input,i),n.performance.validationTime=performance.now()-r,!n.validation.valid){const r=_e.createValidationError(e.schema,e.input,n.validation.errors.map(e=>e.message).join(", "));return"none"!==this.config.reporting.logLevel&&this.logError(r,a,"validation_failed"),n.error=r,n.performance.totalTime=performance.now()-t,n}e.input=n.validation.data}if(e.operation){const t=performance.now();a.steps.push("execution");let r=this.getBoundary(e.component).execute(()=>e.operation(e.input),this.createErrorContext(e));e.timeout&&(r=this.withTimeout(r,e.timeout,`Operation ${e.name} timed out`));try{n.data=await r,a.steps.push("completed"),n.success=!0}catch(r){a.steps.push("failed");const i=this.normalizeError(r);if("none"!==this.config.reporting.logLevel&&this.logError(i,a,"operation_failed"),n.error=i,this.config.handling.enableRecovery)if(a.steps.push("recovery"),n.recovery=await this.errorHandler.handleError(i,this.createErrorContext(e),()=>e.operation(e.input)),n.recovery.recovered)n.data=n.recovery.result,n.success=!0,a.steps.push("recovered"),this.logInfo(a,"operation_recovered");else if(e.fallback){a.steps.push("fallback");try{n.data=await e.fallback(i,e.input),n.success=!0,a.steps.push("fallback_succeeded"),this.logInfo(a,"fallback_succeeded")}catch(e){n.error=this.normalizeError(e),a.steps.push("fallback_failed"),this.logError(n.error,a,"fallback_failed")}}n.performance.handlingTime=performance.now()-t}}}catch(e){a.steps.push("system_error"),n.error=this.normalizeError(e),this.logError(n.error,a,"system_error")}return n.performance.totalTime=performance.now()-t,n}validate(e,t,a){const n=performance.now(),r={operation:"validate",component:"validator",steps:[]},i={success:!1,performance:{validationTime:0,handlingTime:0,totalTime:0},context:r};try{r.steps.push("validation_started");const s={operation:"validate",strict:this.config.validation.strict,sanitize:this.config.validation.sanitize,transform:this.config.validation.transform,stopOnFirstError:this.config.validation.stopOnFirstError,...a};i.validation=this.validator.validate(e,t,s),i.performance.validationTime=performance.now()-n,i.validation.valid?(i.success=!0,i.data=i.validation.data,r.steps.push("validation_succeeded")):(i.error=_e.createValidationError(e,t,i.validation.errors.map(e=>e.message).join(", ")),r.steps.push("validation_failed"),this.logError(i.error,r,"validation_failed"))}catch(e){i.error=this.normalizeError(e),r.steps.push("validation_system_error"),this.logError(i.error,r,"validation_system_error")}return i.performance.totalTime=performance.now()-n,i}async handleError(e,t,a){const n=performance.now(),r={operation:t.operation,component:t.component,steps:["error_handling_started"]},i={success:!1,performance:{validationTime:0,handlingTime:0,totalTime:0},context:r};try{const s=this.normalizeError(e);i.error=s,this.config.handling.enableRecovery?(r.steps.push("recovery_attempted"),i.recovery=await this.errorHandler.handleError(s,t,a),i.performance.handlingTime=performance.now()-n,i.recovery.recovered?(i.success=!0,i.data=i.recovery.result,r.steps.push("recovery_succeeded"),this.logInfo(r,"error_recovery_succeeded")):(r.steps.push("recovery_failed"),this.logError(s,r,"error_recovery_failed"))):(r.steps.push("recovery_disabled"),this.logError(s,r,"recovery_disabled"))}catch(e){i.error=this.normalizeError(e),r.steps.push("error_handling_failed"),this.logError(i.error,r,"error_handling_failed")}return i.performance.totalTime=performance.now()-n,i}getBoundary(e){return this.boundaries.has(e)||this.boundaries.set(e,new Wa({errorHandler:this.errorHandler})),this.boundaries.get(e)}createErrorContext(e){return{operation:e.name,component:e.component,input:e.input,timestamp:new Date,metadata:{schema:e.schema,timeout:e.timeout,retries:e.retries}}}normalizeError(e){return e instanceof Oe?e:e instanceof Error?"TypeError"===e.name?_e.createValidationError("unknown",{},e.message):"RangeError"===e.name?_e.createValidationError("range",{},e.message):_e.createParsingError(e.message,e):_e.createParsingError(e+"",Error(e+""))}async withTimeout(e,t,a){const n=new Promise((e,n)=>{setTimeout(()=>{n(Error(a))},t)});return Promise.race([e,n])}logError(e,t,a){if("none"===this.config.reporting.logLevel)return;const n={step:a,component:t.component,operation:t.operation,timestamp:(new Date).toISOString()};this.config.reporting.includeStackTrace&&(n.stack=e.stack),this.config.reporting.includeContext&&(n.context=t)}logInfo(e,t){this.config.reporting.logLevel}getErrorStatistics(){return{handler:this.errorHandler.getErrorMetrics(),validator:this.validator.getPerformanceMetrics(),boundaries:this.boundaries.size,config:this.config}}updateConfig(e){this.config=this.mergeConfig({...this.config,...e}),this.setupErrorHandling()}clearHistory(){this.errorHandler.clearHistory(),this.validator.clearCache()}createSafeWrapper(e,t){return async(...a)=>{const n=await this.execute({...t,input:a,operation:()=>e(...a)});if(n.success&&void 0!==n.data)return n.data;throw n.error||Error("Operation failed")}}async executeBatch(e,t={}){const{parallel:a=!1,failFast:n=!0,continueOnError:r=!1}=t;if(a){const t=e.map(e=>this.execute(e));return(await Promise.allSettled(t)).map((t,a)=>{if("fulfilled"===t.status)return t.value;{const r={success:!1,error:this.normalizeError(t.reason),performance:{validationTime:0,handlingTime:0,totalTime:0},context:{operation:e[a].name,component:e[a].component,steps:["batch_failed"]}};if(n)throw r.error;return r}})}{const t=[];for(const a of e){const e=await this.execute(a);if(t.push(e),!e.success&&!r&&n)throw e.error}return t}}}const Qa=new Ka;async function Xa(e){return Qa.execute(e)}function en(e,t,a){return Qa.validate(e,t,a)}async function tn(e,t,a){return Qa.handleError(e,t,a)}const an="1.1.0",nn="Ersin Koc",rn="https://github.com/ersinkoc/kairos",sn="https://github.com/ersinkoc/kairos#readme",on="Revolutionary zero-dependency JavaScript date/time library with modular architecture and dynamic holiday system";function dn(){const e=require("./core/plugin-system.js").default,t=require("./plugins/parse/flexible.js").default,a=require("./plugins/parse/iso.js").default,n=require("./plugins/format/tokens.js").default;return e.use([t,a,n]),e}function ln(){const e=require("./core/plugin-system.js").default,t=require("./plugins/business/workday.js").default,a=require("./plugins/business/fiscal.js").default,n=require("./plugins/holiday/engine.js").default;return e.use([t,a,n]),e}function un(){const e=require("./core/plugin-system.js").default,t=require("./plugins/locale/en-US/index.js").default,a=require("./plugins/locale/de-DE/index.js").default,n=require("./plugins/locale/tr-TR/index.js").default,r=require("./plugins/locale/ja-JP/index.js").default,i=require("./plugins/locale/fr-FR/index.js").default,s=require("./plugins/locale/es-ES/index.js").default,o=require("./plugins/locale/it-IT/index.js").default,d=require("./plugins/locale/pt-BR/index.js").default,l=require("./plugins/locale/ru-RU/index.js").default,u=require("./plugins/locale/zh-CN/index.js").default;return e.use([t,a,n,r,i,s,o,d,l,u]),e.locale("en-US"),e}function cn(){const e=require("./core/plugin-system.js").default,t=require("./plugins/holiday/engine.js").default,a=require("./plugins/business/workday.js").default,n=require("./plugins/business/fiscal.js").default,r=require("./plugins/relative/relative-time.js").default,i=require("./plugins/calendar/calendar.js").default,s=require("./plugins/duration/duration.js").default,o=require("./plugins/range/range.js").default,d=require("./plugins/timezone/timezone.js").default,l=require("./plugins/parse/flexible.js").default,u=require("./plugins/parse/iso.js").default,c=require("./plugins/parse/rfc2822.js").default,h=require("./plugins/parse/unix.js").default,m=require("./plugins/format/tokens.js").default,y=require("./plugins/locale/en-US/index.js").default,f=require("./plugins/locale/de-DE/index.js").default,p=require("./plugins/locale/tr-TR/index.js").default,g=require("./plugins/locale/ja-JP/index.js").default,w=require("./plugins/locale/fr-FR/index.js").default,b=require("./plugins/locale/es-ES/index.js").default,M=require("./plugins/locale/it-IT/index.js").default,D=require("./plugins/locale/pt-BR/index.js").default,x=require("./plugins/locale/ru-RU/index.js").default,v=require("./plugins/locale/zh-CN/index.js").default,k=require("./plugins/holiday/calculators/fixed.js").default,S=require("./plugins/holiday/calculators/nth-weekday.js").default,Y=require("./plugins/holiday/calculators/easter.js").default,E=require("./plugins/holiday/calculators/lunar.js").default,L=require("./plugins/holiday/calculators/relative.js").default,R=require("./plugins/holiday/calculators/custom.js").default;return e.use([t,k,S,Y,E,L,R,a,n,r,i,s,o,d,l,u,c,h,m,y,f,p,g,w,b,M,D,x,v]),e.locale("en-US"),e}export{nn as AUTHOR,_a as AdvancedErrorHandler,$a as AdvancedValidator,yt as BusinessDayCalculator,vt as CalendarCalculator,ct as CustomCalculator,ht as CustomCalculatorUtils,on as DESCRIPTION,tt as EasterCalculator,Wa as ErrorBoundary,_e as ErrorFactory,Ve as ErrorHandler,Ka as ErrorManager,Ga as ErrorMonitor,je as FORMAT_TOKENS,gt as FiscalYearCalculator,Ke as FixedCalculator,sn as HOMEPAGE,Ce as InvalidDateError,Fe as InvalidFormatError,ze as InvalidLocaleError,$e as InvalidTimezoneError,Oe as KairosBaseError,t as LRUCache,nt as LunarCalculator,u as MemoryMonitor,Xe as NthWeekdayCalculator,s as ObjectPool,Pe as PluginError,rn as REPOSITORY,lt as RelativeCalculator,Dt as RelativeTimeCalculator,an as VERSION,Be as ValidationError,Ut as allGermanHolidays,Zt as allJapaneseHolidays,At as allTurkishHolidays,Lt as allUSHolidays,wt as businessFiscal,pt as businessWorkday,kt as calendarPlugin,G as createBusinessDayId,qa as createCustomValidator,r as createDateCache,J as createDateString,O as createDay,U as createDayOfWeek,B as createDayOfYear,V as createFormatString,i as createHolidayCache,W as createHolidayId,C as createHour,q as createLocaleCode,$ as createMillisecond,F as createMinute,j as createMonth,d as createPool,z as createSecond,_ as createTimeZone,T as createTimestamp,P as createWeekOfYear,A as createYear,mt as customCalculator,o as datePool,N as default,at as easterCalculator,Xa as executeWithErrorHandling,Qe as fixedCalculator,$t as germanFederalHolidays,Bt as germanHistoricalHolidays,Ft as germanHolidays,zt as germanStateHolidays,Va as globalErrorHandler,Qa as globalErrorManager,Za as globalErrorMonitor,c as globalMemoryMonitor,l as globalPoolManager,Ua as globalValidator,Ja as handleError,tn as handleWithErrorRecovery,Ze as holidayEngine,Se as isDay,He as isDayOfWeek,Ie as isDayOfYear,Ae as isFormatString,Ye as isHour,Te as isLocaleCode,Re as isMillisecond,Ee as isMinute,ke as isMonth,Le as isSecond,xe as isTimestamp,h as isValidDate,g as isValidDay,re as isValidDayOfWeek,ie as isValidDayOfYear,de as isValidFormatString,ee as isValidHour,oe as isValidLocaleCode,ne as isValidMillisecond,te as isValidMinute,p as isValidMonth,b as isValidNth,m as isValidNumber,ae as isValidSecond,y as isValidString,Z as isValidTimestamp,se as isValidWeekOfYear,w as isValidWeekday,f as isValidYear,Ne as isWeekOfYear,ve as isYear,Wt as japaneseGoldenWeekHolidays,Qt as japaneseHeiseiHolidays,Vt as japaneseHistoricalHolidays,_t as japaneseHolidays,Jt as japaneseObservances,Gt as japanesePublicHolidays,Kt as japaneseReiwaHolidays,Ca as localeCN,qt as localeDE,ma as localeES,oa as localeFR,ba as localeIT,ta as localeJP,Sa as localePT,Ia as localeRU,Ct as localeTR,Ht as localeUS,dt as lunarCalculator,a as memoize,et as nthWeekdayCalculator,ut as relativeCalculator,xt as relativeTimePlugin,dn as setupBasic,cn as setupFull,ln as setupWithBusiness,un as setupWithLocales,D as throwError,he as toDay,ge as toDayOfWeek,we as toDayOfYear,De as toFormatString,me as toHour,Me as toLocaleCode,pe as toMillisecond,ye as toMinute,ce as toMonth,fe as toSecond,le as toTimestamp,be as toWeekOfYear,ue as toYear,Tt as turkishHistoricalHolidays,It as turkishHolidays,Nt as turkishObservances,jt as turkishPublicHolidays,Et as usFederalHolidays,St as usHolidays,Yt as usStateHolidays,Ba as validateDateComponents,M as validateHolidayRule,Pa as validateHolidayRuleAdvanced,en as validateWithErrorHandling};//# sourceMappingURL=kairos.esm.min.js.map
